/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.short__selected__video, .short__wrapper, .short, .gallery__media__images__image, .gallery__media, .gallery__wrapper, .about__media__figure__image, .home__gallery__image__media__image, .home__gallery__video__media__image, .home__gallery, .home__wrapper, .preloader__border, .preloader, .content, body, html, .gallery, .about, .home {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.about__contact__details, .about__contact__title, .about__desc__location, .about__desc__gc__title, .about__background__gc__smdesc, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
  display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
  position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
  content: attr(data-char);
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  transition: inherit;
  user-select: none;
}

/* Expanded CSS Variables */
.splitting {
  /* The center word index */
  --word-center: calc((var(--word-total) - 1) / 2);
  /* The center character index */
  --char-center: calc((var(--char-total) - 1) / 2);
  /* The center character index */
  --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
  /* Pecent (0-1) of the word's position */
  --word-percent: calc(var(--word-index) / var(--word-total));
  /* Pecent (0-1) of the line's position */
  --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
  /* Percent (0-1) of the char's position */
  --char-percent: calc(var(--char-index) / var(--char-total));
  /* Offset from center, positive & negative */
  --char-offset: calc(var(--char-index) - var(--char-center));
  /* Absolute distance from center, only positive */
  --distance: calc(
     (var(--char-offset) * var(--char-offset)) / var(--char-center)
  );
  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
  --distance-sine: calc(var(--char-offset) / var(--char-center));
  /* Distance from center where 1 is far left/far right, 0 is center */
  --distance-percent: calc((var(--distance) / var(--char-center)));
}

.splitting.cells img {
  width: 100%;
  display: block;
}

@supports (display: grid) {
  .splitting.cells {
    position: relative;
    overflow: hidden;
    background-size: cover;
    visibility: hidden;
  }
  .splitting .cell-grid {
    background: inherit;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template: repeat(var(--row-total), 1fr)/repeat(var(--col-total), 1fr);
  }
  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }
  .splitting .cell-inner {
    background: inherit;
    position: absolute;
    visibility: visible;
    /* Size to fit the whole container size */
    width: calc(100% * var(--col-total));
    height: calc(100% * var(--row-total));
    /* Position properly */
    left: calc(-100% * var(--col-index));
    top: calc(-100% * var(--row-index));
  }
  /* Helper variables for advanced effects */
  .splitting .cell {
    --center-x: calc((var(--col-total) - 1) / 2);
    --center-y: calc((var(--row-total) - 1) / 2);
    /* Offset from center, positive & negative */
    --offset-x: calc(var(--col-index) - var(--center-x));
    --offset-y: calc(var(--row-index) - var(--center-y));
    /* Absolute distance from center, only positive */
    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );
    /* Absolute distance from center, only positive */
    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );
  }
}
.gallery, .about, .home {
  opacity: 0;
  visibility: hidden;
  z-index: 2;
}

.home__gallery__image__link, .home__gallery__video__link, .about__contact__details__text, .navigation__list__item__link, .navigation__home__link, .home .selectors__photos, .home .selectors__photos--active, .home .selectors__videos, .home .selectors__videos--active {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

/*
  line through - right out.
*/
.home .selectors__videos:after, .home .selectors__videos--active:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0%;
  transform: translateY(-50%);
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home .selectors__videos--active:after {
  transform: scaleX(1);
  transform-origin: right center;
}

.home .selectors__videos:after {
  transform: scaleX(0);
  transform-origin: right center;
}

/*
  Complete link through - left out.
*/
.home .selectors__videos--active {
  display: inline-block;
  /* &:hover {
    &:after {
      @extend %link__line__through__lr--hidden;
    }
  } */
}
.home .selectors__videos {
  display: inline-block;
}
/*
  line through - right//left out.
*/
.home .selectors__photos:after, .home .selectors__photos--active:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0%;
  transform: translateY(-50%);
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home .selectors__photos--active:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.home .selectors__photos:after {
  transform: scaleX(0);
  transform-origin: left center;
}

/*
  Complete link through - right left out.
*/
.home .selectors__photos--active {
  display: inline-block;
  /* &:hover {
    &:after {
      @extend %link__line__through__rl--hidden;
    }
  } */
}
.home .selectors__photos {
  display: inline-block;
}
/*
  Bottom link line // from center.
*/
.navigation__list__item__link:after, .navigation__home__link:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.navigation__list__item__link:hover:after, .navigation__home__link:hover:after {
  transform: scaleX(1);
  transform-origin: center center;
}

.navigation__list__item__link:after, .navigation__home__link:after {
  transform: scaleX(0);
  transform-origin: center center;
}

/*
  Complete link center.
*/
.navigation__list__item__link, .navigation__home__link {
  display: inline-block;
}
/*
  Top link line left.
*/
.about__contact__details__text:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__contact__details__text:hover:before {
  transform: scaleX(1);
  transform-origin: left center;
}

.about__contact__details__text:before {
  transform: scaleX(0);
  transform-origin: right center;
}

/*
  Bottom link line right.
*/
.about__contact__details__text:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__contact__details__text:hover:after {
  transform: scaleX(1);
  transform-origin: right center;
}

.about__contact__details__text:after {
  transform: scaleX(0);
  transform-origin: left center;
}

/*
  Complete link // top//btm.
*/
.about__contact__details__text {
  display: inline-block;
}
/*
  Top link line // Menu gallery.
*/
.home__gallery__image__link:before, .home__gallery__video__link:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home__gallery__image__link:hover:before, .home__gallery__video__link:hover:before {
  transform: scaleX(1);
  transform-origin: left center;
}

.home__gallery__image__link:before, .home__gallery__video__link:before {
  transform: scaleX(0);
  transform-origin: right center;
}

/*
  Bottom link line // Menu gallery.
*/
.home__gallery__image__link:after, .home__gallery__video__link:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 5px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home__gallery__image__link:hover:after, .home__gallery__video__link:hover:after {
  transform: scaleX(1);
  transform-origin: right center;
}

.home__gallery__image__link:after, .home__gallery__video__link:after {
  transform: scaleX(0);
  transform-origin: left center;
}

/*
  Complete link // Menu gallery.
*/
.home__gallery__image__link, .home__gallery__video__link {
  display: inline-block;
}
.about__desc__gc__title__text, .about__background__gc__bg__title__text {
  font-family: "Bodoni Libre";
  font-size: 2.5rem;
}

.home__content__images__title__text, .home__content__videos__title__text {
  font-family: "Bodoni Libre";
  font-size: 5rem;
}

.about__press__title__text, .about__clients__title__text {
  font-family: "Bodoni Libre";
  font-size: 7rem;
}

.short__title__text, .about__desc__location__text {
  font-family: "Bodoni Libre";
  font-size: 8rem;
}

.gallery__title, .about__contact__title__text {
  font-family: "Bodoni Libre";
  font-size: 10rem;
}

.gallery__title__text, .about__footer__title__text, .about__header__title__text {
  font-family: "Bodoni Libre";
  font-size: 20rem;
}

.home .selectors__photos__text, .home .selectors__videos__text, .navigation__list__item__link, .navigation__home__link, body {
  font-size: 1.6rem;
  font-weight: 300;
}

.about__press__content__div__title, .about__desc__gc__desc__text, .about__clients__gallery__client__name, .about__background__desc__frame__text {
  font-size: 2.5rem;
  font-weight: 300;
}

.short__desc__text, .home .selectors__slash__text {
  font-size: 3rem;
  font-weight: 300;
}

.about__contact__details__text, .about__background__gc__smdesc__text {
  font-size: 4rem;
  font-weight: 300;
}

.preloader__number {
  font-size: 5rem;
  font-weight: 300;
}

@font-face {
  font-family: "Montserrat";
  src: url(5ab04ce694d89ff3ff13.woff2) format("woff2"), url(26f739ed3a0348e5d66a.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bodoni Moda";
  src: url(4e857b056045ea28f163.woff2) format("woff2"), url(39e0d01d0e5e1aba4fde.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bodoni Libre";
  src: url(e2e1fbb89791fbebd0ee.woff2) format("woff2"), url(c66549007d6d5c371f17.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  overscroll-behavior: none;
  overflow: hidden;
  position: fixed;
  background: #030303;
  color: #EEF1EF;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  position: fixed;
  font-family: "Montserrat";
  /* @include media('<=phone')
  {
    font-size: 100px;
  } */
}

canvas {
  position: relative;
  z-index: 1;
  pointer-events: none;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

img {
  opacity: 0;
  transition: opacity 0.5s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

[data-animation=title] .word {
  padding: 0 1rem;
}
[data-animation=title] .word .char {
  transform: translateY(100%);
}

[data-animation=paragraph] .word,
[data-animation=label] .word {
  overflow: hidden;
  padding: 0 0.5rem;
}

[data-animation=paragraph],
[data-animation=label],
[data-animation=title] {
  overflow: hidden;
}
[data-animation=paragraph] span,
[data-animation=label] span,
[data-animation=title] span {
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.preloader {
  background: #030303;
  color: #EEF1EF;
  text-align: center;
  z-index: 4;
}
.preloader .logo_preloader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 40rem;
  width: 50rem;
  opacity: 1;
}
.preloader__number {
  position: absolute;
  bottom: 25%;
  left: 50%;
  transform: translate(-50%, -25%);
  overflow: hidden;
}
.preloader__number__text {
  display: inline-block;
}

.preloader__border {
  border-width: 0px;
  border-style: solid;
  border-color: #EEF1EF;
  z-index: -1;
}

.navigation {
  z-index: 3;
  position: fixed;
  width: 100%;
}

.navigation__wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 5rem;
}

.navigation__home {
  height: 100%;
  width: 100%;
  position: absolute;
  left: 4rem;
  top: 4rem;
}

.navigation__home__link {
  font-weight: 300;
  padding: 1rem 0;
}

.navigation__list__item {
  pointer-events: auto;
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__item__link {
  font-weight: 300;
  display: block;
  line-height: 1;
  padding: 0.5rem 0;
}

.home {
  z-index: 0;
}
.home .selectors {
  position: absolute;
  top: 10rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 2rem;
  z-index: 10;
}
.home .selectors__videos {
  cursor: pointer;
}
.home .selectors__videos__text {
  letter-spacing: 0.2rem;
}
.home .selectors__photos {
  cursor: pointer;
}
.home .selectors__photos__text {
  letter-spacing: 0.2rem;
}
.home__wrapper {
  overflow: hidden;
}
.home__gallery {
  z-index: 1;
}
.home__gallery__vidwrap {
  display: flex;
  align-items: center;
  padding: 2rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.home__gallery__video__link {
  padding: 2rem 0;
  display: block;
  margin: 0 1.325rem;
}
.home__gallery__video__link:first-child {
  margin-left: 0;
}
.home__gallery__video__link:last-child {
  margin-right: 0;
}
.home__gallery__video__media {
  height: 55rem;
  width: 10rem;
  position: relative;
  visibility: hidden;
}
.home__gallery__video__media__image {
  object-fit: cover;
}
.home__gallery__imgwrap {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 150%;
  transform: translate(-62%, -50%);
  padding: 2rem;
}
.home__gallery__image__link {
  padding: 2rem 0;
  display: block;
  margin: 0 1.325rem;
}
.home__gallery__image__link:first-child {
  margin-left: 0;
}
.home__gallery__image__link:last-child {
  margin-right: 0;
}
.home__gallery__image__media {
  height: 55rem;
  width: 10rem;
  position: relative;
  visibility: hidden;
}
.home__gallery__image__media__image {
  object-fit: cover;
}
.home__content__videos__title {
  position: absolute;
  bottom: 10rem;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  padding: 1rem;
}
.home__content__videos__title__text {
  padding: 1rem;
  overflow: hidden;
  opacity: 0;
}
.home__content__videos__title__text span span {
  opacity: 0;
}
.home__content__images__title {
  position: absolute;
  bottom: 10rem;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  padding: 1rem;
}
.home__content__images__title__text {
  padding: 1rem;
  overflow: hidden;
  opacity: 0;
}
.home__content__images__title__text span span {
  opacity: 0;
}
.home__links {
  position: absolute;
  bottom: 6rem;
  right: 4rem;
  z-index: 1;
  display: flex;
  align-items: center;
  /* &__title
  {
    text-align: right;
    margin: 0 1rem;
    padding: 2rem 0.5rem;

    &__text
    {
      @extend %link__center--hidden;
      @extend %desc-16;

      font-weight: 300;
      display: block;
      line-height: 1;
      padding: 1rem 0;
      cursor: pointer;
    }
  } */
}
.home__links__link__media {
  height: 4rem;
  width: 4rem;
  position: relative;
  stroke: #EEF1EF;
}

.about__media__figure {
  height: 40rem;
  width: 50rem;
  position: relative;
}
.about__media__figure__image {
  object-fit: cover;
}
.about__header {
  padding-top: 10rem;
  display: grid;
  grid-template-columns: 1fr 70rem;
}
.about__header__title {
  grid-area: 1/1/-1/2;
  align-self: center;
  padding: 10rem 12.7rem;
  border-right: 1px solid #A9B4C2;
}
.about__header__title__text {
  letter-spacing: 2rem;
}
.about__header__media {
  grid-area: 1/2/-1/-1;
  align-self: center;
  justify-self: center;
  visibility: hidden;
}
.about__background {
  border-top: 1px solid #A9B4C2;
}
.about__background__gc {
  display: grid;
  grid-template-columns: 1fr 5rem 70rem;
}
.about__background__gc__smdesc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  align-self: center;
  justify-self: center;
  padding: 10rem 12.7rem;
  border-bottom: 1px solid #A9B4C2;
}
.about__background__gc__bg {
  grid-area: 1/2/-1/3;
  height: 100%;
  width: 100%;
  align-self: flex-start;
  justify-self: center;
}
.about__background__gc__bg__title {
  display: flex;
  justify-content: center;
  align-items: center;
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
  height: 100%;
  width: 100%;
  padding: 2rem 0;
  border-left: 1px solid #A9B4C2;
  border-top: 1px solid #A9B4C2;
}
.about__background__desc {
  grid-area: 1/3/-1/-1;
}
.about__background__desc__frame {
  text-align: center;
  padding: 4rem 2rem;
  border-top: 1px solid #A9B4C2;
}
.about__background__desc__frame:first-of-type {
  border: none;
}
.about__background__desc__frame:last-of-type {
  border-bottom: 1px solid #A9B4C2;
}
.about__clients {
  padding-bottom: 12.7rem;
}
.about__clients__title__text {
  letter-spacing: 2rem;
  padding: 12.7rem;
}
.about__clients__gallery__wrapper {
  padding: 0 35rem;
}
.about__clients__gallery__client {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #A9B4C2;
}
.about__clients__gallery__client__name {
  letter-spacing: 1rem;
  padding: 3rem;
}
.about__desc {
  display: grid;
  grid-template-columns: 1fr 70rem;
  height: 100%;
  width: 100%;
  padding: 12.7rem;
  padding-right: 0;
}
.about__desc__gc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  align-self: center;
  justify-self: center;
  padding-left: 12.7rem;
  display: grid;
  grid-template-columns: 5rem 1fr;
}
.about__desc__gc__title {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
}
.about__desc__gc__title__text {
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
}
.about__desc__gc__desc {
  grid-area: 1/2/-1/-1;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.about__desc__location {
  grid-area: 1/2/-1/-1;
  width: 100%;
  height: 100%;
  padding: 12.7rem;
  border-left: 1px solid #A9B4C2;
}
.about__desc__location__text {
  writing-mode: vertical-lr;
  transform: scale(1, 1);
}
.about__press {
  padding-bottom: 12.7rem;
}
.about__press__title__text {
  text-transform: uppercase;
  letter-spacing: 1rem;
  padding: 12.7rem;
  padding-top: 0;
}
.about__press__content {
  padding: 0 35rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}
.about__press__content__div {
  width: 100%;
  padding: 3rem;
  border-bottom: 1px solid #A9B4C2;
}
.about__press__content__div__title {
  cursor: pointer;
}
.about__press__content__div__title__link {
  visibility: hidden;
}
.about__contact {
  height: 100%;
  width: 100%;
  padding: 22.7rem;
}
.about__contact__title {
  padding-bottom: 15rem;
}
.about__contact__title__text {
  text-transform: uppercase;
}
.about__contact__details {
  padding-bottom: 12.7rem;
}
.about__contact__details__text {
  cursor: pointer;
  line-height: 2;
  letter-spacing: 1rem;
  padding: 0.5rem 0;
}
.about__footer {
  height: 100%;
  width: 100%;
  padding-bottom: 10rem;
  display: grid;
  grid-template-columns: 70rem 1fr;
  border-top: 1px solid #A9B4C2;
}
.about__footer__media {
  grid-area: 1/1/-1/2;
  align-self: center;
  justify-self: center;
  visibility: hidden;
}
.about__footer__title {
  grid-area: 1/2/-1/-1;
  align-self: center;
  padding: 10rem 12.7rem;
  border-left: 1px solid #A9B4C2;
}
.about__footer__title__text {
  letter-spacing: 2rem;
}

.gallery__media {
  display: grid;
  place-items: center;
  height: 100%;
  width: 100%;
  visibility: hidden;
}
.gallery__media__images {
  width: 33rem;
  height: 50rem;
  transform: translateY(50%);
  position: relative;
}
.gallery__media__images__image {
  object-fit: cover;
}
.gallery__title {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  visibility: hidden;
}
.gallery__title__text {
  text-transform: uppercase;
  mix-blend-mode: difference;
  z-index: -5;
  letter-spacing: 2rem;
}

.short__wrapper {
  padding: 10rem;
}
.short__selected {
  height: 80%;
  width: 100%;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}
.short__selected__video {
  object-fit: cover;
}
.short__title {
  position: absolute;
  top: 10%;
  left: 50%;
  transform: translate(-50%, -10%);
  width: 100%;
  text-align: center;
}
.short__desc {
  position: absolute;
  bottom: 5%;
  left: 10rem;
  transform: translateY(-5%);
}
.short__desc__text {
  line-height: 3.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/