/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.project__gallery__media__image, .project__gallery, .project__wrapper, .about__footer__media__image, .about__header__media__image, .home__gallery__media__image, .home__gallery, .home__wrapper, .preloader, .content, body, html, .project, .about, .home {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.about__contact__details, .about__contact__title, .about__desc__location, .about__desc__gc__title, .about__background__gc__smdesc, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.project, .about, .home {
  opacity: 0;
  visibility: hidden;
}

.about__contact__details__text, .navigation__list__item__link, .navigation__home__link {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.about__contact__details__text:after, .navigation__list__item__link:after, .navigation__home__link:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__contact__details__text:hover:after, .navigation__list__item__link:hover:after, .navigation__home__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.about__contact__details__text:after, .navigation__list__item__link:after, .navigation__home__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.about__contact__details__text, .navigation__list__item__link, .navigation__home__link {
  display: inline-block;
}
.about__desc__gc__title__text, .about__background__gc__bg__title__text {
  font-family: "Oswald";
  font-size: 2.5rem;
}

.about__clients__title__text {
  font-family: "Oswald";
  font-size: 7rem;
}

.about__contact__title__text, .about__desc__location__text, .home__gallery__title__text, .preloader__text {
  font-family: "Oswald";
  font-size: 10rem;
}

.about__footer__title__text, .about__header__title__text {
  font-family: "Oswald";
  font-size: 20rem;
}

body {
  font-size: 1.6rem;
  font-weight: 300;
}

.navigation__list__item__link, .navigation__home__link, .preloader__number {
  font-size: 2rem;
  font-weight: 300;
}

.about__desc__gc__desc__text, .about__clients__gallery__name, .about__background__desc__frame__text {
  font-size: 2.5rem;
  font-weight: 300;
}

.about__contact__details__text {
  font-size: 4rem;
  font-weight: 300;
}

.about__background__gc__smdesc__text {
  font-size: 5rem;
  font-weight: 300;
}

@font-face {
  font-family: "Source Sans Pro";
  src: url(545b1d89876cda033482.woff2) format("woff2"), url(ba2dbb2d1d0f34f87443.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url(efdbc24c0a6838bdb283.woff2) format("woff2"), url(f94aaeb597c2370f7b9a.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Source Sans Pro";
  src: url(e62207551bebcb4dc41b.woff2) format("woff2"), url(7e685090c03bd76b35f6.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url(9f41c407c686701ed4b2.woff2) format("woff2"), url(a5749901fe9a8b5a0938.woff) format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  overscroll-behavior: none;
  overflow: hidden;
  position: fixed;
  background: #1C2321;
  color: #EEF1EF;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  position: fixed;
  font-family: "Source Sans Pro";
  /* @include media('<=phone')
  {
    font-size: 100px;
  } */
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

img {
  opacity: 0;
  transition: opacity 0.5s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

[data-animation=paragraph],
[data-animation=label],
[data-animation=title] {
  overflow: hidden;
}
[data-animation=paragraph] span,
[data-animation=label] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  background: #1C2321;
  color: #EEF1EF;
  text-align: center;
  z-index: 3;
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  position: absolute;
  bottom: 7.4rem;
  left: 50%;
  transform: translateX(-50%);
  overflow: hidden;
}
.preloader__number__text {
  display: inline-block;
}

.navigation {
  z-index: 2;
  position: fixed;
  width: 100%;
  /* pointer-events: none; */
}

.navigation__wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 5rem;
}

.navigation__home {
  height: 100%;
  width: 100%;
  position: absolute;
  left: 4rem;
  top: 4rem;
}

.navigation__home__link {
  font-weight: 500;
}

.navigation__list__item {
  pointer-events: auto;
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__item__link {
  font-weight: 500;
  display: block;
  line-height: 1;
}

.home {
  opacity: 0;
}
.home__wrapper {
  overflow: hidden;
}
.home__gallery__wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.home__gallery__link {
  display: block;
  margin: 0 1.325rem;
}
.home__gallery__media {
  height: 50rem;
  width: 33rem;
  position: relative;
}
.home__gallery__media__image {
  object-fit: cover;
}

/* .home__title
{
  @extend %title-50;

  position: absolute;
  top: 25%;
  left: 25%;
} */
.home__gallery__title {
  position: absolute;
  left: 50%;
  bottom: 15%;
  transform: translate(-50%, -15%);
  opacity: 0;
}
.home__gallery__title--active {
  opacity: 1;
}

.home__gallery__title__text {
  text-transform: uppercase;
}

.about__header {
  padding-top: 10rem;
  display: grid;
  grid-template-columns: 1fr 70rem;
}
.about__header__title {
  grid-area: 1/1/-1/2;
  align-self: center;
  padding: 10rem 12.7rem;
  border-right: 1px solid #A9B4C2;
}
.about__header__title__text {
  letter-spacing: 2rem;
}
.about__header__media {
  grid-area: 1/2/-1/-1;
  align-self: center;
  justify-self: center;
  height: 40rem;
  width: 50rem;
  position: relative;
}
.about__header__media__image {
  object-fit: cover;
}
.about__background {
  border-top: 1px solid #A9B4C2;
}
.about__background__gc {
  display: grid;
  grid-template-columns: 1fr 5rem 70rem;
}
.about__background__gc__smdesc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  align-self: center;
  justify-self: center;
  padding: 10rem 12.7rem;
  border-bottom: 1px solid #A9B4C2;
}
.about__background__gc__bg {
  grid-area: 1/2/-1/3;
  height: 100%;
  width: 100%;
  align-self: flex-start;
  justify-self: center;
}
.about__background__gc__bg__title {
  display: flex;
  justify-content: center;
  align-items: center;
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
  height: 100%;
  width: 100%;
  padding: 2rem 0;
  border-left: 1px solid #A9B4C2;
  border-top: 1px solid #A9B4C2;
}
.about__background__desc {
  grid-area: 1/3/-1/-1;
}
.about__background__desc__frame {
  text-align: center;
  padding: 4rem 2rem;
  border-top: 1px solid #A9B4C2;
}
.about__background__desc__frame:first-of-type {
  border: none;
}
.about__background__desc__frame:last-of-type {
  border-bottom: 1px solid #A9B4C2;
}
.about__clients {
  padding-bottom: 12.7rem;
}
.about__clients__title__text {
  letter-spacing: 2rem;
  padding: 12.7rem;
}
.about__clients__gallery__wrapper {
  padding: 0 40rem;
}
.about__clients__gallery__name {
  letter-spacing: 1rem;
  padding: 3rem;
  border-bottom: 1px solid #A9B4C2;
}
.about__clients__gallery__media__image {
  display: none;
}
.about__desc {
  display: grid;
  grid-template-columns: 1fr 70rem;
  height: 100%;
  width: 100%;
  padding: 12.7rem;
  padding-right: 0;
}
.about__desc__gc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  align-self: center;
  justify-self: center;
  padding-left: 12.7rem;
  display: grid;
  grid-template-columns: 5rem 1fr;
}
.about__desc__gc__title {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
}
.about__desc__gc__title__text {
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
}
.about__desc__gc__desc {
  grid-area: 1/2/-1/-1;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.about__desc__location {
  grid-area: 1/2/-1/-1;
  width: 100%;
  height: 100%;
  padding: 12.7rem;
  border-left: 1px solid #A9B4C2;
}
.about__desc__location__text {
  writing-mode: vertical-lr;
  transform: scale(1, 1);
}
.about__contact {
  height: 100%;
  width: 100%;
  padding: 22.7rem;
}
.about__contact__title {
  padding-bottom: 15rem;
}
.about__contact__title__text {
  text-transform: uppercase;
}
.about__contact__details {
  padding-bottom: 12.7rem;
}
.about__contact__details__text {
  letter-spacing: 1rem;
}
.about__footer {
  height: 100%;
  width: 100%;
  padding-bottom: 10rem;
  display: grid;
  grid-template-columns: 70rem 1fr;
  border-top: 1px solid #A9B4C2;
}
.about__footer__media {
  grid-area: 1/1/-1/2;
  align-self: center;
  justify-self: center;
  height: 40rem;
  width: 50rem;
  position: relative;
}
.about__footer__media__image {
  object-fit: cover;
}
.about__footer__title {
  grid-area: 1/2/-1/-1;
  align-self: center;
  padding: 10rem 12.7rem;
  border-left: 1px solid #A9B4C2;
}
.about__footer__title__text {
  letter-spacing: 2rem;
}

.project__wrapper {
  display: flex;
  align-items: center;
}

.project__gallery {
  visibility: hidden;
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  gap: 2rem;
}

.project__gallery__media {
  /* position: absolute; */
  width: 40rem;
  height: 60rem;
  position: relative;
}

.project__gallery__media__image {
  object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/