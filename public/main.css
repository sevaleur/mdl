/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.project__gallery__media__image, .project__gallery, .project__wrapper, .about__clients__gallery__media__image, .about__background__portrait__media__image, .home__gallery__content, .home__gallery__media__image, .home__gallery, .home__wrapper, .navigation__media__link__image, .navigation, .preloader, .content, body, html, .project, .about, .home {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.project__gallery__wrapper, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.project, .about, .home {
  opacity: 0;
  visibility: hidden;
}

.navigation__list__item__link {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.navigation__list__item__link:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.navigation__list__item__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.navigation__list__item__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.navigation__list__item__link {
  display: inline-block;
}
.navigation__location__active {
  font-family: "Oswald";
  font-size: 2.5rem;
}

.about__clients__title__text, .about__background__title__text {
  font-family: "Oswald";
  font-size: 5rem;
}

.about__info__title, .preloader__text {
  font-family: "Oswald";
  font-size: 10rem;
}

.home__gallery__title__text {
  font-family: "Oswald";
  font-size: 20rem;
}

.preloader__number, body {
  font-size: 1.6rem;
  font-weight: 300;
}

.about__background__desc__text, .about__info__desc, .navigation__list__item__link {
  font-size: 2rem;
  font-weight: 300;
}

@font-face {
  font-family: "Source Sans Pro";
  src: url(545b1d89876cda033482.woff2) format("woff2"), url(ba2dbb2d1d0f34f87443.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url(efdbc24c0a6838bdb283.woff2) format("woff2"), url(f94aaeb597c2370f7b9a.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Source Sans Pro";
  src: url(e62207551bebcb4dc41b.woff2) format("woff2"), url(7e685090c03bd76b35f6.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Oswald";
  src: url(9f41c407c686701ed4b2.woff2) format("woff2"), url(a5749901fe9a8b5a0938.woff) format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
  background: #232323;
  color: #E5E5E5;
  overscroll-behavior: none;
  overflow: hidden;
  position: fixed;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  position: fixed;
  font-family: "Source Sans Pro";
  /* @include media('<=phone')
  {
    font-size: 100px;
  } */
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

img {
  opacity: 0;
  transition: opacity 0.5s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

[data-animation=paragraph] span,
[data-animation=label] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
}

.preloader {
  background: #2d323c;
  color: #E5E5E5;
  text-align: center;
  z-index: 3;
}

.preloader__text span {
  display: inline-block;
  overflow: hidden;
}

.preloader__number {
  position: absolute;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
  overflow: hidden;
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  z-index: 2;
  position: fixed;
  /* pointer-events: none; */
}

.navigation__wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 5rem;
}

.navigation__media {
  height: 15rem;
  width: 15rem;
  position: relative;
}

.navigation__media__link {
  font-size: 0rem;
}

.navigation__media__link__image {
  object-fit: cover;
}

.navigation__location {
  position: absolute;
  left: 50%;
  top: 4rem;
  transform: translateX(-50%);
}

.navigation__location__active {
  text-transform: uppercase;
  letter-spacing: 1rem;
}

.navigation__list__item {
  pointer-events: auto;
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.navigation__list__item__link {
  display: block;
  line-height: 1;
}

.home {
  opacity: 0;
}
.home__wrapper {
  overflow: hidden;
}
.home__gallery__wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.home__gallery__link {
  display: block;
  margin: 0 1.325rem;
}
.home__gallery__media {
  height: 51.5rem;
  width: 22.35rem;
  position: relative;
}
.home__gallery__media__image {
  object-fit: cover;
}

/* .home__title
{
  @extend %title-50;

  position: absolute;
  top: 25%;
  left: 25%;
} */
.home__gallery__title {
  position: absolute;
  left: 50%;
  bottom: 5%;
  transform: translate(-50%, -20%);
  opacity: 0;
}
.home__gallery__title--active {
  opacity: 1;
}

.home__gallery__title__text {
  text-transform: uppercase;
}

.about__info {
  display: flex;
  margin: 20rem 0;
  /* &:first-child
  {
    margin-top: 0;
  } */
}
.about__info:last-child {
  margin-bottom: 0;
}

.about__info__title {
  margin: auto;
  max-width: 107.4rem;
  text-align: center;
}

.about__info__desc {
  margin: auto;
  max-width: 70rem;
}

.about__info__desc__text {
  line-height: 2.5rem;
}

.about__background {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  gap: 10rem;
  margin: 20rem 0;
}
.about__background:first-child {
  margin-top: 0;
}
.about__background:last-child {
  margin-bottom: 0;
}

.about__background__content {
  display: flex;
  flex-direction: column;
  align-items: space-around;
  justify-content: center;
  gap: 2rem;
}

.about__background__desc__text {
  line-height: 2.5rem;
}

.about__background__portrait__media {
  height: 80rem;
  width: 50rem;
  position: relative;
}

.about__clients {
  margin: 20rem 0;
}
.about__clients:first-child {
  margin-top: 0;
}
.about__clients:last-child {
  margin-bottom: 0;
}

.about__clients__title__text {
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 1rem;
}

.about__clients__gallery {
  padding: 15rem;
}

.about__clients__gallery__wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}

.about__clients__gallery__media {
  height: 20rem;
  width: 20rem;
  position: relative;
  margin: 5rem;
}

.about__clients__gallery__media__image {
  object-fit: contain;
}

.about__contact {
  margin: 20rem 0;
}
.about__contact:first-child {
  margin-top: 0;
}
.about__contact:last-child {
  margin-bottom: 0;
}

.project:before, .project:after {
  content: "";
  height: 24rem;
  position: absolute;
  left: 0;
  width: 100%;
  z-index: 1;
}
.project:before {
  background: linear-gradient(to bottom, #2d323c 0%, rgba(45, 50, 60, 0) 100%);
  top: 0;
}
.project:after {
  background: linear-gradient(to top, #2d323c 0%, rgba(45, 50, 60, 0) 100%);
  bottom: 0;
}

.project__wrapper {
  display: flex;
  align-items: center;
}

.project__gallery__wrapper {
  flex-wrap: wrap;
  gap: 4rem;
  padding: 10rem;
}

.project__gallery__media {
  height: 50rem;
  width: 50rem;
  position: relative;
}

.project__gallery__media__image {
  object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/