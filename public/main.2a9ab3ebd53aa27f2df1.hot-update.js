/*! For license information please see main.2a9ab3ebd53aa27f2df1.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Gallery/objects/GalleryElement.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),n=s("./node_modules/gsap/index.js"),l=s("./app/shaders/gallery/element/vertex.glsl"),o=s("./app/shaders/gallery/element/fragment.glsl");class r{constructor({element:e,index:t,geometry:s,gl:i,length:h,scene:a,screen:n,viewport:l}){this.element=e,this.index=t,this.geo=s,this.gl=i,this.length=h,this.scene=a,this.screen=n,this.viewport=l,this.new_pos=0,this.createMesh(),this.createBounds()}createMesh(){const e=new Image,t=new i.Texture(this.gl,{generateMipmaps:!1});this.program=new h.Program(this.gl,{vertex:l.default,fragment:o.default,uniforms:{tMap:{value:t},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_alpha:{value:0},u_offset:{value:0},u_scroll:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}}),e.crossOrigin="anonymous",e.src=this.element.getAttribute("data-src"),e.onload=()=>{this.program.uniforms.u_imageSize.value=[e.naturalWidth,e.naturalHeight],t.image=e},this.plane=new a.Mesh(this.gl,{geometry:this.geo,program:this.program}),this.plane.index=this.index,this.plane.setParent(this.scene)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y],this.gallery_height=this.length*this.bounds.height,this.full_height=this.gallery_height/this.screen.height*this.viewport.height,this.new_pos+=this.full_height,this.pos_x=Math.cos(this.index)*(this.screen.width/2/this.bounds.height)}show(){n.default.fromTo(this.program.uniforms.u_alpha,{value:0,duration:1},{value:1,duration:1})}hide(){n.default.to(this.program.uniforms.u_alpha,{value:0,duration:1})}onResize(e){if(this.new_pos=0,e){const{screen:t,viewport:s}=e;t&&(this.screen=t),s&&(this.viewport=s,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width,this.plane.position.x=-this.viewport.width/2+this.plane.scale.x/2+this.x*this.viewport.width+this.pos_x}updateY(e=0){this.y=(this.bounds.top-e)/this.screen.height;const t=this.plane.position.y-this.y/100;this.plane.program.uniforms.u_offset.value=n.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y*this.viewport.height+this.new_pos}update(e,t,s){if(this.bounds){if(this.updateScale(),this.updateX(),this.updateY(e),this.plane.program.uniforms.u_scroll.value=(e-t)/this.screen.height*15,"up"===s){this.plane.position.y+this.plane.scale.y<-this.viewport.height/2&&(this.new_pos+=this.full_height)}if("down"===s){this.plane.position.y-this.plane.scale.y>this.viewport.height/2&&(this.new_pos-=this.full_height)}}}}}},(function(e){e.h=()=>"5a2305d5da1ed3b61c9d"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,