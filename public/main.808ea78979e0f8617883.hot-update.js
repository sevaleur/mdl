/*! For license information please see main.808ea78979e0f8617883.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Home/menu/MenuElement.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),o=s("./node_modules/gsap/index.js"),n=s("./app/shaders/home/element/vertex.glsl"),r=s("./app/shaders/home/element/fragment.glsl");class l{constructor({element:e,index:t,text:s,geometry:i,gl:h,length:a,scene:o,screen:n,viewport:r}){this.element=e,this.index=t,this.text=s,this.geo=i,this.gl=h,this.length=a,this.scene=o,this.screen=n,this.viewport=r,this.new_pos=0,this.createMesh(),this.createBounds()}createMesh(){const e=new Image,t=new i.Texture(this.gl,{generateMipmaps:!1});this.program=new h.Program(this.gl,{vertex:n.default,fragment:r.default,uniforms:{tMap:{value:t},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_alpha:{value:0},u_offset:{value:0},u_scroll:{value:0},u_progress:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}}),e.crossOrigin="anonymous",e.src=this.element.getAttribute("data-src"),e.onload=()=>{this.program.uniforms.u_imageSize.value=[e.naturalWidth,e.naturalHeight],t.image=e},this.plane=new a.Mesh(this.gl,{geometry:this.geo,program:this.program}),this.plane.setParent(this.scene)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.wrap=document.querySelector(".home__gallery__wrapper"),this.wrap_bounds=this.wrap.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y],this.full_width=this.wrap_bounds.width/this.screen.width*this.viewport.width}show(){o.default.fromTo(this.program.uniforms.u_alpha,{value:0,duration:1},{value:1,duration:1,delay:3})}hide(){o.default.to(this.program.uniforms.u_alpha,{value:0,duration:1})}onResize(e){if(this.new_pos=0,e){const{screen:t,viewport:s}=e;t&&(this.screen=t),s&&(this.viewport=s,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width/2,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(e=0){this.x=(this.bounds.left-e)/this.screen.width;const t=this.plane.position.x-this.x/100;this.plane.program.uniforms.u_offset.value=o.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.x=this.viewport.width/2-this.plane.scale.x/2-this.x*this.viewport.width+this.new_pos}updateY(){this.y=this.bounds.top/this.screen.height,this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y*this.viewport.height,this.plane.position.y+=.5*Math.cos(this.plane.position.x/this.viewport.width*Math.PI)-.5}update(e,t){if(this.bounds){if(this.updateScale(),this.updateX(e.current),this.updateY(),this.plane.program.uniforms.u_scroll.value=(e.current-e.last)/this.screen.width*30,"up"===t){this.plane.position.x+this.plane.scale.x<-this.viewport.width/2&&(this.new_pos+=this.full_width)}if("down"===t){this.plane.position.x-this.plane.scale.x>this.viewport.width/2&&(this.new_pos-=this.full_width)}}}}}},(function(e){e.h=()=>"bbb82bb18eb138775cae"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,