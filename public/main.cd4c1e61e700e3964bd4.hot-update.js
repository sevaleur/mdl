/*! For license information please see main.cd4c1e61e700e3964bd4.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Home/menu/ImageEl.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>u});var s=i("./node_modules/ogl/src/core/Program.js"),h=i("./node_modules/ogl/src/core/Mesh.js"),a=i("./node_modules/gsap/index.js"),n=i("./node_modules/prefix/index.js"),r=i.n(n),o=i("./app/shaders/home/element/vertex.glsl"),l=i("./app/shaders/home/element/fragment.glsl");class u{constructor({element:e,index:t,link:i,geometry:s,gl:h,length:a,scene:n,screen:o,viewport:l}){this.element=e,this.index=t,this.link=i,this.geo=s,this.gl=h,this.length=a,this.scene=n,this.screen=o,this.viewport=l,console.log(this.link),this.l_prefix=r()("transform"),this.createMesh(),this.createBounds()}createMesh(){this.texture=window.IMAGE_TEXTURES[this.element.getAttribute("data-src")],this.program=new s.Program(this.gl,{vertex:o.default,fragment:l.default,uniforms:{tMap:{value:this.texture},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_alpha:{value:0},u_offset:{value:0},u_scroll:{value:0},u_progress:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}}),this.program.uniforms.u_imageSize.value=[this.texture.image.naturalWidth,this.texture.image.naturalHeight],this.plane=new h.Mesh(this.gl,{geometry:this.geo,program:this.program}),this.plane.setParent(this.scene)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}show(){a.default.fromTo(this.program.uniforms.u_alpha,{value:0},{value:1,duration:1})}hide(){a.default.to(this.program.uniforms.u_alpha,{value:0,duration:1})}onResize(e){if(e){const{screen:t,viewport:i}=e;t&&(this.screen=t),i&&(this.viewport=i,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(e=0){this.x=(this.bounds.left+e)/this.screen.width;const t=this.plane.position.x+this.x/100;this.plane.program.uniforms.u_offset.value=a.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.x=-this.viewport.width/2+this.plane.scale.x/2+this.x*this.viewport.width}updateY(){this.plane.position.y=a.default.utils.mapRange(-this.viewport.width,this.viewport.width,-Math.PI,Math.PI,this.plane.position.x),this.y=this.plane.position.y*this.screen.height,this.link_pos=this.y/this.viewport.height+-this.viewport.height/2+this.bounds.height/2-this.bounds.height/2,this.link.style[this.l_prefix]=`translateY(${-this.link_pos}px)`}update(e){this.bounds&&(this.updateScale(),this.updateX(e.current),this.updateY(),this.plane.program.uniforms.u_scroll.value=(e.current-e.last)/this.screen.width*30)}}}},(function(e){e.h=()=>"c6d8b29bfa116f91784a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0xwQyxLQUFLcUMsUUFBUW9CLEVBQU9ULFNBQ3BCaEQsS0FBS3NDLFVBR0x0QyxLQUFLK0IsTUFBTW5CLFFBQVFJLFNBQVNPLFNBQVNMLE9BQVV1QyxFQUFPVCxRQUFVUyxFQUFPQyxNQUFRMUQsS0FBS0YsT0FBTzRCLE1BQVMsR0FDdEcsa0JDdEtGaUMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2l0c2ZvcmdvdGhhbS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9Ib21lL21lbnUvSW1hZ2VFbC5qcyIsIndlYnBhY2s6Ly9pdHNmb3Jnb3RoYW0vd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc2gsIFByb2dyYW0gfSBmcm9tICdvZ2wnXG5pbXBvcnQgZ3NhcCBmcm9tICdnc2FwJ1xuXG5pbXBvcnQgUHJlZml4IGZyb20gJ3ByZWZpeCdcblxuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL2hvbWUvZWxlbWVudC92ZXJ0ZXguZ2xzbCdcbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL2hvbWUvZWxlbWVudC9mcmFnbWVudC5nbHNsJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbWFnZUVsXG57XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgaW5kZXgsIGxpbmssIGdlb21ldHJ5LCBnbCwgbGVuZ3RoLCBzY2VuZSwgc2NyZWVuLCB2aWV3cG9ydCB9KVxuICB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFxuICAgIHRoaXMuaW5kZXggPSBpbmRleFxuICAgIHRoaXMubGluayA9IGxpbmtcbiAgICB0aGlzLmdlbyA9IGdlb21ldHJ5XG4gICAgdGhpcy5nbCA9IGdsXG4gICAgdGhpcy5sZW5ndGggPSBsZW5ndGhcbiAgICB0aGlzLnNjZW5lID0gc2NlbmVcbiAgICB0aGlzLnNjcmVlbiA9IHNjcmVlblxuICAgIHRoaXMudmlld3BvcnQgPSB2aWV3cG9ydFxuXG4gICAgY29uc29sZS5sb2codGhpcy5saW5rKVxuXG4gICAgdGhpcy5sX3ByZWZpeCA9IFByZWZpeCgndHJhbnNmb3JtJylcblxuICAgIHRoaXMuY3JlYXRlTWVzaCgpXG4gICAgdGhpcy5jcmVhdGVCb3VuZHMoKVxuICB9XG5cbiAgLypcbiAgICBDcmVhdGUuXG4gICovXG5cbiAgY3JlYXRlTWVzaCgpXG4gIHtcbiAgICB0aGlzLnRleHR1cmUgPSB3aW5kb3cuSU1BR0VfVEVYVFVSRVNbdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKV1cblxuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsXG4gICAge1xuICAgICAgdmVydGV4LFxuICAgICAgZnJhZ21lbnQsXG4gICAgICB1bmlmb3JtczpcbiAgICAgIHtcbiAgICAgICAgdE1hcDogeyB2YWx1ZTogdGhpcy50ZXh0dXJlIH0sXG4gICAgICAgIHVfaW1hZ2VTaXplOiB7IHZhbHVlOiBbMCwgMF0gfSxcbiAgICAgICAgdV9wbGFuZVNpemU6IHsgdmFsdWU6IFswLCAwXSB9LFxuICAgICAgICB1X2FscGhhOiB7IHZhbHVlOiAwLjAgfSxcbiAgICAgICAgdV9vZmZzZXQ6IHsgdmFsdWU6IDAgfSxcbiAgICAgICAgdV9zY3JvbGw6IHsgdmFsdWU6IDAgfSxcbiAgICAgICAgdV9wcm9ncmVzczogeyB2YWx1ZTogMC4wIH0sXG4gICAgICAgIHVfdmlld3BvcnRTaXplOiB7IHZhbHVlOiBbdGhpcy52aWV3cG9ydC53aWR0aCwgdGhpcy52aWV3cG9ydC5oZWlnaHRdIH1cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgdGhpcy5wcm9ncmFtLnVuaWZvcm1zLnVfaW1hZ2VTaXplLnZhbHVlID0gW3RoaXMudGV4dHVyZS5pbWFnZS5uYXR1cmFsV2lkdGgsIHRoaXMudGV4dHVyZS5pbWFnZS5uYXR1cmFsSGVpZ2h0XVxuXG4gICAgdGhpcy5wbGFuZSA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlbyxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbVxuICAgIH0pXG5cbiAgICB0aGlzLnBsYW5lLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuICB9XG5cbiAgY3JlYXRlQm91bmRzKClcbiAge1xuICAgIHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICB0aGlzLnVwZGF0ZVNjYWxlKClcbiAgICB0aGlzLnVwZGF0ZVgoKVxuICAgIHRoaXMudXBkYXRlWSgpXG5cbiAgICB0aGlzLnBsYW5lLnByb2dyYW0udW5pZm9ybXMudV9wbGFuZVNpemUudmFsdWUgPSBbdGhpcy5wbGFuZS5zY2FsZS54LCB0aGlzLnBsYW5lLnNjYWxlLnldXG4gIH1cblxuICAvKlxuICAgIEFuaW1hdGlvbnMuXG4gICovXG5cbiAgc2hvdygpXG4gIHtcbiAgICBnc2FwLmZyb21UbyhcbiAgICAgIHRoaXMucHJvZ3JhbS51bmlmb3Jtcy51X2FscGhhLFxuICAgICAge1xuICAgICAgICB2YWx1ZTogMC4wXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB2YWx1ZTogMS4wLFxuICAgICAgICBkdXJhdGlvbjogMSxcbiAgICAgIH0pXG4gIH1cblxuICBoaWRlKClcbiAge1xuICAgIGdzYXAudG8oXG4gICAgICB0aGlzLnByb2dyYW0udW5pZm9ybXMudV9hbHBoYSxcbiAgICAgIHtcbiAgICAgICAgdmFsdWU6IDAuMCxcbiAgICAgICAgZHVyYXRpb246IDFcbiAgICAgIH0pXG4gIH1cblxuICAvKlxuICAgIEV2ZW50cy5cbiAgKi9cblxuICBvblJlc2l6ZShzaXplcylcbiAge1xuICAgIGlmKHNpemVzKVxuICAgIHtcbiAgICAgIGNvbnN0IHsgc2NyZWVuLCB2aWV3cG9ydCB9ID0gc2l6ZXNcblxuICAgICAgaWYoc2NyZWVuKSB0aGlzLnNjcmVlbiA9IHNjcmVlblxuICAgICAgaWYodmlld3BvcnQpIHtcbiAgICAgICAgdGhpcy52aWV3cG9ydCA9IHZpZXdwb3J0XG5cbiAgICAgICAgdGhpcy5wbGFuZS5wcm9ncmFtLnVuaWZvcm1zLnVfdmlld3BvcnRTaXplLnZhbHVlID0gW3RoaXMudmlld3BvcnQud2lkdGgsIHRoaXMudmlld3BvcnQuaGVpZ2h0XVxuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuY3JlYXRlQm91bmRzKClcbiAgfVxuXG4gIC8qXG4gICAgVXBkYXRlLlxuICAqL1xuXG4gIHVwZGF0ZVNjYWxlKClcbiAge1xuICAgIHRoaXMucGxhbmUuc2NhbGUueCA9IHRoaXMudmlld3BvcnQud2lkdGggKiB0aGlzLmJvdW5kcy53aWR0aCAvIHRoaXMuc2NyZWVuLndpZHRoXG4gICAgdGhpcy5wbGFuZS5zY2FsZS55ID0gdGhpcy52aWV3cG9ydC5oZWlnaHQgKiB0aGlzLmJvdW5kcy5oZWlnaHQgLyB0aGlzLnNjcmVlbi5oZWlnaHRcblxuICAgIHRoaXMucGxhbmUucHJvZ3JhbS51bmlmb3Jtcy51X3BsYW5lU2l6ZS52YWx1ZSA9IFt0aGlzLnBsYW5lLnNjYWxlLngsIHRoaXMucGxhbmUuc2NhbGUueV1cbiAgfVxuXG4gIHVwZGF0ZVgoY3VycmVudD0wKVxuICB7XG4gICAgdGhpcy54ID0gKHRoaXMuYm91bmRzLmxlZnQgKyBjdXJyZW50KSAvIHRoaXMuc2NyZWVuLndpZHRoXG4gICAgY29uc3QgcG9zX3ZpZXdwb3J0ID0gdGhpcy5wbGFuZS5wb3NpdGlvbi54ICsgdGhpcy54IC8gMTAwXG5cbiAgICB0aGlzLnBsYW5lLnByb2dyYW0udW5pZm9ybXMudV9vZmZzZXQudmFsdWUgPSBnc2FwLnV0aWxzLm1hcFJhbmdlKC00LCA0LCAtLjM1LCAuMzUsIHBvc192aWV3cG9ydClcblxuICAgIHRoaXMucGxhbmUucG9zaXRpb24ueCA9ICgtdGhpcy52aWV3cG9ydC53aWR0aCAvIDIpICsgKHRoaXMucGxhbmUuc2NhbGUueCAvIDIpICsgKHRoaXMueCAqIHRoaXMudmlld3BvcnQud2lkdGgpXG4gIH1cblxuICB1cGRhdGVZKClcbiAge1xuICAgIHRoaXMucGxhbmUucG9zaXRpb24ueSA9IGdzYXAudXRpbHMubWFwUmFuZ2UoLXRoaXMudmlld3BvcnQud2lkdGgsIHRoaXMudmlld3BvcnQud2lkdGgsIC1NYXRoLlBJLCBNYXRoLlBJLCB0aGlzLnBsYW5lLnBvc2l0aW9uLngpXG5cbiAgICB0aGlzLnkgPSB0aGlzLnBsYW5lLnBvc2l0aW9uLnkgKiB0aGlzLnNjcmVlbi5oZWlnaHRcbiAgICB0aGlzLmxpbmtfcG9zID0gKHRoaXMueSAvIHRoaXMudmlld3BvcnQuaGVpZ2h0KSArICgtdGhpcy52aWV3cG9ydC5oZWlnaHQgLyAyKSArICh0aGlzLmJvdW5kcy5oZWlnaHQgLyAyKSAtICh0aGlzLmJvdW5kcy5oZWlnaHQgLyAyKVxuXG4gICAgdGhpcy5saW5rLnN0eWxlW3RoaXMubF9wcmVmaXhdID0gYHRyYW5zbGF0ZVkoJHstdGhpcy5saW5rX3Bvc31weClgXG4gIH1cblxuICB1cGRhdGUoc2Nyb2xsKVxuICB7XG4gICAgaWYoIXRoaXMuYm91bmRzKSByZXR1cm5cblxuICAgIHRoaXMudXBkYXRlU2NhbGUoKVxuICAgIHRoaXMudXBkYXRlWChzY3JvbGwuY3VycmVudClcbiAgICB0aGlzLnVwZGF0ZVkoKVxuICAgIC8qIHRoaXMuY3JlYXRlQm91bmRzKCkgKi9cblxuICAgIHRoaXMucGxhbmUucHJvZ3JhbS51bmlmb3Jtcy51X3Njcm9sbC52YWx1ZSA9ICgoc2Nyb2xsLmN1cnJlbnQgLSBzY3JvbGwubGFzdCkgLyB0aGlzLnNjcmVlbi53aWR0aCkgKiAzMFxuICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJjNmQ4YjI5YmZhMTE2ZjkxNzg0YVwiKSJdLCJuYW1lcyI6WyJJbWFnZUVsIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiaW5kZXgiLCJsaW5rIiwiZ2VvbWV0cnkiLCJnbCIsImxlbmd0aCIsInNjZW5lIiwic2NyZWVuIiwidmlld3BvcnQiLCJ0aGlzIiwiZ2VvIiwiY29uc29sZSIsImxvZyIsImxfcHJlZml4IiwiUHJlZml4IiwiY3JlYXRlTWVzaCIsImNyZWF0ZUJvdW5kcyIsInRleHR1cmUiLCJ3aW5kb3ciLCJJTUFHRV9URVhUVVJFUyIsImdldEF0dHJpYnV0ZSIsInByb2dyYW0iLCJQcm9ncmFtIiwidmVydGV4IiwiZnJhZ21lbnQiLCJ1bmlmb3JtcyIsInRNYXAiLCJ2YWx1ZSIsInVfaW1hZ2VTaXplIiwidV9wbGFuZVNpemUiLCJ1X2FscGhhIiwidV9vZmZzZXQiLCJ1X3Njcm9sbCIsInVfcHJvZ3Jlc3MiLCJ1X3ZpZXdwb3J0U2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwiaW1hZ2UiLCJuYXR1cmFsV2lkdGgiLCJuYXR1cmFsSGVpZ2h0IiwicGxhbmUiLCJNZXNoIiwic2V0UGFyZW50IiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidXBkYXRlU2NhbGUiLCJ1cGRhdGVYIiwidXBkYXRlWSIsInNjYWxlIiwieCIsInkiLCJzaG93IiwiZ3NhcCIsImR1cmF0aW9uIiwiaGlkZSIsIm9uUmVzaXplIiwic2l6ZXMiLCJjdXJyZW50IiwibGVmdCIsInBvc192aWV3cG9ydCIsInBvc2l0aW9uIiwiTWF0aCIsIlBJIiwibGlua19wb3MiLCJzdHlsZSIsInVwZGF0ZSIsInNjcm9sbCIsImxhc3QiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=