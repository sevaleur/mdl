/*! For license information please see main.d4d7c15a7949268ea799.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Project/Media.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>l});var s=i("./node_modules/ogl/src/core/Texture.js"),h=i("./node_modules/ogl/src/core/Program.js"),a=i("./node_modules/ogl/src/core/Mesh.js"),n=i("./node_modules/gsap/index.js"),o=i("./app/shaders/plane-vertex.glsl");Object(function(){var e=new Error("Cannot find module 'shaders/plane-fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}());class l{constructor({element:e,index:t,geometry:i,gl:s,length:h,scene:a,screen:n,viewport:o}){this.element=e,this.index=t,this.geo=i,this.gl=s,this.length=h,this.scene=a,this.screen=n,this.viewport=o,this.new_pos=0,this.createMesh(),this.half={_scale:{x:this.plane.scale.x/2,y:this.plane.scale.y/2},_viewport:{width:this.viewport.width/2,height:this.viewport.height/2},_screen:{width:this.screen.width/2,height:this.screen.height/2}},this.createBounds()}createMesh(){const e=new Image,t=new s.Texture(this.gl,{generateMipmaps:!1}),i=new h.Program(this.gl,{vertex:o.default,fragment:Object(function(){var e=new Error("Cannot find module 'shaders/plane-fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}()),uniforms:{tMap:{value:t},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_offset:{value:0},u_strength:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}});e.crossOrigin="anonymous",e.src=this.element.getAttribute("data-src"),e.onload=()=>{i.uniforms.u_imageSize.value=[e.naturalWidth,e.naturalHeight],t.image=e},this.plane=new a.Mesh(this.gl,{geometry:this.geo,program:i}),this.plane.setParent(this.scene)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y],this.gallery_height=this.length*this.bounds.height,this.full_height=this.gallery_height/this.screen.height*this.viewport.height,this.pos_x=Math.cos(this.index)*(this.half._screen.width/this.bounds.height)}onResize(e){if(this.new_pos=0,e){const{screen:t,viewport:i}=e;t&&(this.screen=t),i&&(this.viewport=i,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width,this.plane.position.x=-this.half._viewport.width+this.half._scale.x+this.x*this.viewport.width+this.pos_x}updateY(e=0){this.y=(this.bounds.top-e)/this.screen.height;const t=this.plane.position.y-this.y/100;this.plane.program.uniforms.u_offset.value=n.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.y=this.half._viewport.height-this.half._scale.y-this.y*this.viewport.height+this.new_pos}update(e,t,i){if(this.bounds){if(this.updateScale(),this.updateX(),this.updateY(e),this.plane.program.uniforms.u_strength.value=(e-t)/this.screen.height*15,"up"===i){this.plane.position.y+this.plane.scale.y<-this.half._viewport.height&&(this.new_pos+=this.full_height)}if("down"===i){this.plane.position.y-this.plane.scale.y>this.half._viewport.height&&(this.new_pos-=this.full_height)}}}}}},(function(e){e.h=()=>"e40be469ff29205fa435"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,