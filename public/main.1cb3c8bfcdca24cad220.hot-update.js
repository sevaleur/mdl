/*! For license information please see main.1cb3c8bfcdca24cad220.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Project/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var l=s("./node_modules/ogl/src/core/Transform.js"),r=s("./node_modules/ogl/src/extras/Plane.js"),o=s("./node_modules/gsap/index.js"),i=s("./node_modules/lodash/map.js"),n=s.n(i);Object(function(){var e=new Error("Cannot find module './GalleryElement'");throw e.code="MODULE_NOT_FOUND",e}());class c{constructor({gl:e,scene:t,screen:s,viewport:r}){this.gl=e,this.screen=s,this.viewport=r,this.group=new l.Transform,this.scroll={current:0,target:0,last:0,speed:.1,ease:.05},this.createGeometry(),this.getElements(),this.onResize(),this.createGallery(),this.group.setParent(t)}createGeometry(){this.geo=new r.Plane(this.gl,{heightSegments:10})}getElements(){this.elements=document.querySelectorAll("img.project__gallery__media__image"),this.length=this.elements.length}createGallery(){this.gallery_elements=n()(this.elements,((e,t)=>new GalleryElement({element:e,index:t,geometry:this.geo,gl:this.gl,length:this.length,scene:this.group,screen:this.screen,viewport:this.viewport})))}onResize(){n()(this.gallery_elements,(e=>e.onResize({screen:this.screen,viewport:this.viewport})))}onTouchDown({y:e}){this.scroll.position=this.scroll.current}onTouchMove({y:e}){const t=2*(e.start-e.end);this.scroll.target=this.scroll.position+t}onTouchUp({y:e}){}onWheel({pixelY:e}){this.scroll.target+=.5*e}update(){this.scroll.target+=this.scroll.speed,this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.ease),this.scroll.current<this.scroll.last?(this.direction="up",this.scroll.speed=-.1):(this.direction="down",this.scroll.speed=.1);const{current:e,last:t}=this.scroll;n()(this.gallery_elements,(s=>s.update(e,t,this.direction))),this.scroll.last=this.scroll.current}}}},(function(e){e.h=()=>"6158441e8ef75c15325c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4xY2IzYzhiZmNkY2EyNGNhZDIyMC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7OGFBTWUsTUFBTUEsRUFFbkJDLGFBQVksR0FBRUMsRUFBRSxNQUFFQyxFQUFLLE9BQUVDLEVBQU0sU0FBRUMsSUFFL0JDLEtBQUtKLEdBQUtBLEVBQ1ZJLEtBQUtGLE9BQVNBLEVBQ2RFLEtBQUtELFNBQVdBLEVBQ2hCQyxLQUFLQyxNQUFRLElBQUlDLEVBQUFBLFVBRWpCRixLQUFLRyxPQUFTLENBQ1pDLFFBQVMsRUFDVEMsT0FBUSxFQUNSQyxLQUFNLEVBQ05DLE1BQU8sR0FDUEMsS0FBTSxLQUdSUixLQUFLUyxpQkFDTFQsS0FBS1UsY0FFTFYsS0FBS1csV0FFTFgsS0FBS1ksZ0JBRUxaLEtBQUtDLE1BQU1ZLFVBQVVoQixFQUN2QixDQUVBWSxpQkFFRVQsS0FBS2MsSUFBTSxJQUFJQyxFQUFBQSxNQUFNZixLQUFLSixHQUMxQixDQUNFb0IsZUFBZ0IsSUFFcEIsQ0FFQU4sY0FFRVYsS0FBS2lCLFNBQVdDLFNBQVNDLGlCQUFpQixzQ0FDMUNuQixLQUFLb0IsT0FBU3BCLEtBQUtpQixTQUFTRyxNQUM5QixDQUVBUixnQkFFRVosS0FBS3FCLGlCQUFtQkMsSUFBSXRCLEtBQUtpQixVQUFVLENBQUNNLEVBQVNDLElBRTVDLElBQUlDLGVBQWUsQ0FDeEJGLFVBQ0FDLFFBQ0FFLFNBQVUxQixLQUFLYyxJQUNmbEIsR0FBSUksS0FBS0osR0FDVHdCLE9BQVFwQixLQUFLb0IsT0FDYnZCLE1BQU9HLEtBQUtDLE1BQ1pILE9BQVFFLEtBQUtGLE9BQ2JDLFNBQVVDLEtBQUtELFlBR3JCLENBTUFZLFdBRUVXLElBQUl0QixLQUFLcUIsa0JBQWtCRSxHQUFXQSxFQUFRWixTQUFTLENBQ3JEYixPQUFRRSxLQUFLRixPQUNiQyxTQUFVQyxLQUFLRCxZQUVuQixDQUVBNEIsYUFBWSxFQUFFQyxJQUVaNUIsS0FBS0csT0FBTzBCLFNBQVc3QixLQUFLRyxPQUFPQyxPQUNyQyxDQUVBMEIsYUFBWSxFQUFFRixJQUVaLE1BQU1HLEVBQTZCLEdBQW5CSCxFQUFFSSxNQUFRSixFQUFFSyxLQUU1QmpDLEtBQUtHLE9BQU9FLE9BQVNMLEtBQUtHLE9BQU8wQixTQUFXRSxDQUM5QyxDQUVBRyxXQUFVLEVBQUVOLElBR1osQ0FFQU8sU0FBUSxPQUFFQyxJQUVScEMsS0FBS0csT0FBT0UsUUFBbUIsR0FBVCtCLENBQ3hCLENBTUFDLFNBRUVyQyxLQUFLRyxPQUFPRSxRQUFVTCxLQUFLRyxPQUFPSSxNQUNsQ1AsS0FBS0csT0FBT0MsUUFBVWtDLEVBQUFBLFFBQUFBLE1BQUFBLFlBQXVCdEMsS0FBS0csT0FBT0MsUUFBU0osS0FBS0csT0FBT0UsT0FBUUwsS0FBS0csT0FBT0ssTUFFL0ZSLEtBQUtHLE9BQU9DLFFBQVVKLEtBQUtHLE9BQU9HLE1BRW5DTixLQUFLdUMsVUFBWSxLQUNqQnZDLEtBQUtHLE9BQU9JLE9BQVMsS0FJckJQLEtBQUt1QyxVQUFZLE9BQ2pCdkMsS0FBS0csT0FBT0ksTUFBUSxJQUd0QixNQUFNLFFBQUVILEVBQU8sS0FBRUUsR0FBU04sS0FBS0csT0FFL0JtQixJQUFJdEIsS0FBS3FCLGtCQUFrQkUsR0FBV0EsRUFBUWMsT0FBT2pDLEVBQVNFLEVBQU1OLEtBQUt1QyxhQUV6RXZDLEtBQUtHLE9BQU9HLEtBQU9OLEtBQUtHLE9BQU9DLE9BQ2pDLGtCQzNIRm9DLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pdHNmb3Jnb3RoYW0vLi9hcHAvY29tcG9uZW50cy9DYW52YXMvUHJvamVjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9pdHNmb3Jnb3RoYW0vd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBsYW5lLCBUcmFuc2Zvcm0gfSBmcm9tICdvZ2wnXG5pbXBvcnQgZ3NhcCBmcm9tICdnc2FwJ1xuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xuXG5pbXBvcnQgTWVkaWEgZnJvbSAnLi9HYWxsZXJ5RWxlbWVudCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvamVjdFxue1xuICBjb25zdHJ1Y3Rvcih7IGdsLCBzY2VuZSwgc2NyZWVuLCB2aWV3cG9ydCB9KVxuICB7XG4gICAgdGhpcy5nbCA9IGdsXG4gICAgdGhpcy5zY3JlZW4gPSBzY3JlZW5cbiAgICB0aGlzLnZpZXdwb3J0ID0gdmlld3BvcnRcbiAgICB0aGlzLmdyb3VwID0gbmV3IFRyYW5zZm9ybSgpXG5cbiAgICB0aGlzLnNjcm9sbCA9IHtcbiAgICAgIGN1cnJlbnQ6IDAsXG4gICAgICB0YXJnZXQ6IDAsXG4gICAgICBsYXN0OiAwLFxuICAgICAgc3BlZWQ6IDAuMSxcbiAgICAgIGVhc2U6IDAuMDVcbiAgICB9XG5cbiAgICB0aGlzLmNyZWF0ZUdlb21ldHJ5KClcbiAgICB0aGlzLmdldEVsZW1lbnRzKClcblxuICAgIHRoaXMub25SZXNpemUoKVxuXG4gICAgdGhpcy5jcmVhdGVHYWxsZXJ5KClcblxuICAgIHRoaXMuZ3JvdXAuc2V0UGFyZW50KHNjZW5lKVxuICB9XG5cbiAgY3JlYXRlR2VvbWV0cnkoKVxuICB7XG4gICAgdGhpcy5nZW8gPSBuZXcgUGxhbmUodGhpcy5nbCxcbiAgICB7XG4gICAgICBoZWlnaHRTZWdtZW50czogMTBcbiAgICB9KVxuICB9XG5cbiAgZ2V0RWxlbWVudHMoKVxuICB7XG4gICAgdGhpcy5lbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2ltZy5wcm9qZWN0X19nYWxsZXJ5X19tZWRpYV9faW1hZ2UnKVxuICAgIHRoaXMubGVuZ3RoID0gdGhpcy5lbGVtZW50cy5sZW5ndGhcbiAgfVxuXG4gIGNyZWF0ZUdhbGxlcnkoKVxuICB7XG4gICAgdGhpcy5nYWxsZXJ5X2VsZW1lbnRzID0gbWFwKHRoaXMuZWxlbWVudHMsIChlbGVtZW50LCBpbmRleCkgPT5cbiAgICB7XG4gICAgICByZXR1cm4gbmV3IEdhbGxlcnlFbGVtZW50KHtcbiAgICAgICAgZWxlbWVudCxcbiAgICAgICAgaW5kZXgsXG4gICAgICAgIGdlb21ldHJ5OiB0aGlzLmdlbyxcbiAgICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICAgIGxlbmd0aDogdGhpcy5sZW5ndGgsXG4gICAgICAgIHNjZW5lOiB0aGlzLmdyb3VwLFxuICAgICAgICBzY3JlZW46IHRoaXMuc2NyZWVuLFxuICAgICAgICB2aWV3cG9ydDogdGhpcy52aWV3cG9ydFxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgLypcbiAgICBFdmVudHMuXG4gICovXG5cbiAgb25SZXNpemUoKVxuICB7XG4gICAgbWFwKHRoaXMuZ2FsbGVyeV9lbGVtZW50cywgZWxlbWVudCA9PiBlbGVtZW50Lm9uUmVzaXplKHtcbiAgICAgIHNjcmVlbjogdGhpcy5zY3JlZW4sXG4gICAgICB2aWV3cG9ydDogdGhpcy52aWV3cG9ydCxcbiAgICB9KSlcbiAgfVxuXG4gIG9uVG91Y2hEb3duKHsgeSB9KVxuICB7XG4gICAgdGhpcy5zY3JvbGwucG9zaXRpb24gPSB0aGlzLnNjcm9sbC5jdXJyZW50XG4gIH1cblxuICBvblRvdWNoTW92ZSh7IHkgfSlcbiAge1xuICAgIGNvbnN0IHlfZGlzdCA9ICh5LnN0YXJ0IC0geS5lbmQpICogMlxuXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwucG9zaXRpb24gKyB5X2Rpc3RcbiAgfVxuXG4gIG9uVG91Y2hVcCh7IHkgfSlcbiAge1xuXG4gIH1cblxuICBvbldoZWVsKHsgcGl4ZWxZIH0pXG4gIHtcbiAgICB0aGlzLnNjcm9sbC50YXJnZXQgKz0gcGl4ZWxZICogMC41XG4gIH1cblxuICAvKlxuICAgIFVwZGF0ZS5cbiAgKi9cblxuICB1cGRhdGUoKVxuICB7XG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ICs9IHRoaXMuc2Nyb2xsLnNwZWVkXG4gICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IGdzYXAudXRpbHMuaW50ZXJwb2xhdGUodGhpcy5zY3JvbGwuY3VycmVudCwgdGhpcy5zY3JvbGwudGFyZ2V0LCB0aGlzLnNjcm9sbC5lYXNlKVxuXG4gICAgaWYodGhpcy5zY3JvbGwuY3VycmVudCA8IHRoaXMuc2Nyb2xsLmxhc3QpXG4gICAge1xuICAgICAgdGhpcy5kaXJlY3Rpb24gPSAndXAnXG4gICAgICB0aGlzLnNjcm9sbC5zcGVlZCA9IC0wLjFcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2Rvd24nXG4gICAgICB0aGlzLnNjcm9sbC5zcGVlZCA9IDAuMVxuICAgIH1cblxuICAgIGNvbnN0IHsgY3VycmVudCwgbGFzdCB9ID0gdGhpcy5zY3JvbGxcblxuICAgIG1hcCh0aGlzLmdhbGxlcnlfZWxlbWVudHMsIGVsZW1lbnQgPT4gZWxlbWVudC51cGRhdGUoY3VycmVudCwgbGFzdCwgdGhpcy5kaXJlY3Rpb24pKVxuXG4gICAgdGhpcy5zY3JvbGwubGFzdCA9IHRoaXMuc2Nyb2xsLmN1cnJlbnRcbiAgfVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNjE1ODQ0MWU4ZWY3NWMxNTMyNWNcIikiXSwibmFtZXMiOlsiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwiZ2wiLCJzY2VuZSIsInNjcmVlbiIsInZpZXdwb3J0IiwidGhpcyIsImdyb3VwIiwiVHJhbnNmb3JtIiwic2Nyb2xsIiwiY3VycmVudCIsInRhcmdldCIsImxhc3QiLCJzcGVlZCIsImVhc2UiLCJjcmVhdGVHZW9tZXRyeSIsImdldEVsZW1lbnRzIiwib25SZXNpemUiLCJjcmVhdGVHYWxsZXJ5Iiwic2V0UGFyZW50IiwiZ2VvIiwiUGxhbmUiLCJoZWlnaHRTZWdtZW50cyIsImVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZ2FsbGVyeV9lbGVtZW50cyIsIm1hcCIsImVsZW1lbnQiLCJpbmRleCIsIkdhbGxlcnlFbGVtZW50IiwiZ2VvbWV0cnkiLCJvblRvdWNoRG93biIsInkiLCJwb3NpdGlvbiIsIm9uVG91Y2hNb3ZlIiwieV9kaXN0Iiwic3RhcnQiLCJlbmQiLCJvblRvdWNoVXAiLCJvbldoZWVsIiwicGl4ZWxZIiwidXBkYXRlIiwiZ3NhcCIsImRpcmVjdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==