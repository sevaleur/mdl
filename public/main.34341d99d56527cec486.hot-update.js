/*! For license information please see main.34341d99d56527cec486.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>_});var i=s("./node_modules/ogl/src/core/Transform.js"),l=s("./node_modules/ogl/src/extras/Plane.js"),o=s("./node_modules/gsap/index.js"),r=s("./node_modules/lodash/map.js"),h=s.n(r),n=s("./node_modules/prefix/index.js"),c=s.n(n),a=s("./app/components/Canvas/Home/menu/ImageEl.js");class _{constructor({gl:e,scene:t,screen:s,viewport:l,camera:o}){this.gl=e,this.scene=t,this.screen=s,this.viewport=l,this.camera=o,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,speed:.1,ease:.05},this.t_prefix=c()("transform"),this.createGeometry(),this.getElements(),this.createMenu(),this.createMenuSelector(),this.onResize(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geo=new l.Plane(this.gl,{heightSegments:10,widthSegments:10})}getElements(){this.gallery_element=document.querySelector(".home__gallery"),this.gallery_wrapper=document.querySelector(".home__gallery__wrapper"),this.selector_videos=document.querySelector(".selectors__videos"),this.selector_photos=document.querySelector(".selectors__photos"),this.img_el=document.querySelectorAll("img.home__gallery__image__media__image"),this.vid_el=document.querySelectorAll("img.home__gallery__video__media__image"),this.vid_links=document.querySelectorAll(".home__gallery__video__link"),this.img_links=document.querySelectorAll(".home__gallery__image__link"),this.img_length=this.img_el.length,this.vid_length=this.vid_el.length}createMenu(){this.video_elements=h()(this.vid_el,((e,t)=>new a.default({element:e,index:t,link:this.vid_links[t],geometry:this.geo,gl:this.gl,length:this.vid_length,scene:this.group,screen:this.screen,viewport:this.viewport}))),this.image_elements=h()(this.img_el,((e,t)=>new a.default({element:e,index:t,link:this.img_links[t],geometry:this.geo,gl:this.gl,length:this.img_length,scene:this.group,screen:this.screen,viewport:this.viewport})))}createMenuSelector(){this.selector_videos.setAttribute("class","selectors__videos--active"),this.selector_photos.addEventListener("click",(()=>{o.default.timeline().to(this.scroll,{target:-this.scroll.limit,duration:1},0),this.selector_videos.setAttribute("class","selectors__videos"),this.selector_photos.setAttribute("class","selectors__photos--active")})),this.selector_videos.addEventListener("click",(()=>{o.default.timeline().to(this.scroll,{target:0,duration:1}),this.selector_photos.setAttribute("class","selectors__photos"),this.selector_videos.setAttribute("class","selectors__videos--active")}))}show(){h()(this.image_elements,(e=>e.show())),h()(this.video_elements,(e=>e.show()))}hide(){h()(this.image_elements,(e=>e.hide())),h()(this.video_elements,(e=>e.hide()))}onResize(){this.bounds=this.gallery_wrapper.getBoundingClientRect(),h()(this.image_elements,(e=>e.onResize({screen:this.screen,viewport:this.viewport}))),h()(this.video_elements,(e=>e.onResize({screen:this.screen,viewport:this.viewport}))),this.scroll.limit=this.bounds.width-this.image_elements[0].element.clientWidth}onTouchDown({y:e,x:t}){this.scroll.position=this.scroll.current}onTouchMove({y:e,x:t}){const s=t.start-t.end;this.scroll.target=this.scroll.position-s}onTouchUp({y:e,x:t}){}onWheel({pixelY:e,pixelX:t}){}update(){this.scroll.target=o.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.ease),this.gallery_element.style[this.t_prefix]=`translateX(${this.scroll.current}px)`,h()(this.image_elements,(e=>e.update(this.scroll))),h()(this.video_elements,(e=>e.update(this.scroll))),this.scroll.last=this.scroll.current}destroy(){this.scene.removeChild(this.group)}}}},(function(e){e.h=()=>"74f2352846bd7bf28c0a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QXVCOUMsS0FBS0csT0FBT0MsUUFBU0osS0FBS0csT0FBT0UsT0FBUUwsS0FBS0csT0FBT0ssTUFFbEdSLEtBQUtzQixnQkFBZ0I4QyxNQUFNcEUsS0FBS1MsVUFBYSxjQUFhVCxLQUFLRyxPQUFPQyxhQUV0RWlDLElBQUlyQyxLQUFLMkMsZ0JBQWdCTCxHQUFXQSxFQUFRNkIsT0FBT25FLEtBQUtHLFVBQ3hEa0MsSUFBSXJDLEtBQUtvQyxnQkFBZ0JFLEdBQVdBLEVBQVE2QixPQUFPbkUsS0FBS0csVUFFeERILEtBQUtHLE9BQU9HLEtBQU9OLEtBQUtHLE9BQU9DLE9BQ2pDLENBTUFpRSxVQUVFckUsS0FBS0osTUFBTTBFLFlBQVl0RSxLQUFLQyxNQUM5QixrQkMxTkZzRSxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXRzZm9yZ290aGFtLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL0hvbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vaXRzZm9yZ290aGFtL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbGFuZSwgVHJhbnNmb3JtIH0gZnJvbSAnb2dsJ1xuaW1wb3J0IGdzYXAgZnJvbSAnZ3NhcCdcblxuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xuaW1wb3J0IFByZWZpeCBmcm9tICdwcmVmaXgnXG5cbmltcG9ydCBJbWFnZUVsIGZyb20gJy4vbWVudS9JbWFnZUVsJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYWxsZXJ5XG57XG4gIGNvbnN0cnVjdG9yKHsgZ2wsIHNjZW5lLCBzY3JlZW4sIHZpZXdwb3J0LCBjYW1lcmEgfSlcbiAge1xuICAgIHRoaXMuZ2wgPSBnbFxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgIHRoaXMuc2NyZWVuID0gc2NyZWVuXG4gICAgdGhpcy52aWV3cG9ydCA9IHZpZXdwb3J0XG4gICAgdGhpcy5jYW1lcmEgPSBjYW1lcmFcblxuICAgIHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKClcblxuICAgIHRoaXMuc2Nyb2xsID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIGxhc3Q6IDAsXG4gICAgICBzcGVlZDogMC4xLFxuICAgICAgZWFzZTogMC4wNVxuICAgIH1cblxuICAgIHRoaXMudF9wcmVmaXggPSBQcmVmaXgoJ3RyYW5zZm9ybScpXG5cbiAgICB0aGlzLmNyZWF0ZUdlb21ldHJ5KClcbiAgICB0aGlzLmdldEVsZW1lbnRzKClcbiAgICB0aGlzLmNyZWF0ZU1lbnUoKVxuICAgIHRoaXMuY3JlYXRlTWVudVNlbGVjdG9yKClcblxuICAgIHRoaXMub25SZXNpemUoKVxuXG4gICAgdGhpcy5ncm91cC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcblxuICAgIHRoaXMuc2hvdygpXG4gIH1cblxuICBjcmVhdGVHZW9tZXRyeSgpXG4gIHtcbiAgICB0aGlzLmdlbyA9IG5ldyBQbGFuZSh0aGlzLmdsLFxuICAgIHtcbiAgICAgIGhlaWdodFNlZ21lbnRzOiAxMCxcbiAgICAgIHdpZHRoU2VnbWVudHM6IDEwXG4gICAgfSlcbiAgfVxuXG4gIGdldEVsZW1lbnRzKClcbiAge1xuICAgIHRoaXMuZ2FsbGVyeV9lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhvbWVfX2dhbGxlcnknKVxuICAgIHRoaXMuZ2FsbGVyeV93cmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhvbWVfX2dhbGxlcnlfX3dyYXBwZXInKVxuXG4gICAgdGhpcy5zZWxlY3Rvcl92aWRlb3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0b3JzX192aWRlb3MnKVxuICAgIHRoaXMuc2VsZWN0b3JfcGhvdG9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdG9yc19fcGhvdG9zJylcblxuICAgIHRoaXMuaW1nX2VsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nLmhvbWVfX2dhbGxlcnlfX2ltYWdlX19tZWRpYV9faW1hZ2UnKVxuICAgIHRoaXMudmlkX2VsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nLmhvbWVfX2dhbGxlcnlfX3ZpZGVvX19tZWRpYV9faW1hZ2UnKVxuXG4gICAgdGhpcy52aWRfbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaG9tZV9fZ2FsbGVyeV9fdmlkZW9fX2xpbmsnKVxuICAgIHRoaXMuaW1nX2xpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmhvbWVfX2dhbGxlcnlfX2ltYWdlX19saW5rJylcblxuICAgIHRoaXMuaW1nX2xlbmd0aCA9IHRoaXMuaW1nX2VsLmxlbmd0aFxuICAgIHRoaXMudmlkX2xlbmd0aCA9IHRoaXMudmlkX2VsLmxlbmd0aFxuICB9XG5cbiAgY3JlYXRlTWVudSgpXG4gIHtcbiAgICB0aGlzLnZpZGVvX2VsZW1lbnRzID0gbWFwKHRoaXMudmlkX2VsLCAoZWxlbWVudCwgaW5kZXgpID0+XG4gICAge1xuICAgICAgcmV0dXJuIG5ldyBJbWFnZUVsKHtcbiAgICAgICAgZWxlbWVudCxcbiAgICAgICAgaW5kZXgsXG4gICAgICAgIGxpbms6IHRoaXMudmlkX2xpbmtzW2luZGV4XSxcbiAgICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvLFxuICAgICAgICBnbDogdGhpcy5nbCxcbiAgICAgICAgbGVuZ3RoOiB0aGlzLnZpZF9sZW5ndGgsXG4gICAgICAgIHNjZW5lOiB0aGlzLmdyb3VwLFxuICAgICAgICBzY3JlZW46IHRoaXMuc2NyZWVuLFxuICAgICAgICB2aWV3cG9ydDogdGhpcy52aWV3cG9ydFxuICAgICAgfSlcbiAgICB9KVxuXG4gICAgdGhpcy5pbWFnZV9lbGVtZW50cyA9IG1hcCh0aGlzLmltZ19lbCwgKGVsZW1lbnQsIGluZGV4KSA9PlxuICAgIHtcbiAgICAgIHJldHVybiBuZXcgSW1hZ2VFbCh7XG4gICAgICAgIGVsZW1lbnQsXG4gICAgICAgIGluZGV4LFxuICAgICAgICBsaW5rOiB0aGlzLmltZ19saW5rc1tpbmRleF0sXG4gICAgICAgIGdlb21ldHJ5OiB0aGlzLmdlbyxcbiAgICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICAgIGxlbmd0aDogdGhpcy5pbWdfbGVuZ3RoLFxuICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcbiAgICAgICAgc2NyZWVuOiB0aGlzLnNjcmVlbixcbiAgICAgICAgdmlld3BvcnQ6IHRoaXMudmlld3BvcnRcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIGNyZWF0ZU1lbnVTZWxlY3RvcigpXG4gIHtcbiAgICB0aGlzLnNlbGVjdG9yX3ZpZGVvcy5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3NlbGVjdG9yc19fdmlkZW9zLS1hY3RpdmUnKVxuXG4gICAgdGhpcy5zZWxlY3Rvcl9waG90b3MuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PlxuICAgIHtcbiAgICAgIGNvbnN0IHBob3RvX3RsID0gZ3NhcC50aW1lbGluZSgpXG5cbiAgICAgIHBob3RvX3RsLnRvKHRoaXMuc2Nyb2xsLFxuICAgICAge1xuICAgICAgICB0YXJnZXQ6IC10aGlzLnNjcm9sbC5saW1pdCxcbiAgICAgICAgZHVyYXRpb246IDEsXG4gICAgICB9LCAwKVxuXG4gICAgICB0aGlzLnNlbGVjdG9yX3ZpZGVvcy5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3NlbGVjdG9yc19fdmlkZW9zJylcbiAgICAgIHRoaXMuc2VsZWN0b3JfcGhvdG9zLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnc2VsZWN0b3JzX19waG90b3MtLWFjdGl2ZScpXG4gICAgfSlcblxuICAgIHRoaXMuc2VsZWN0b3JfdmlkZW9zLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT5cbiAgICB7XG4gICAgICBjb25zdCB2aWRfdGwgPSBnc2FwLnRpbWVsaW5lKClcblxuICAgICAgdmlkX3RsLnRvKHRoaXMuc2Nyb2xsLFxuICAgICAgICB7XG4gICAgICAgICAgdGFyZ2V0OiAwLFxuICAgICAgICAgIGR1cmF0aW9uOiAxLFxuICAgICAgICB9KVxuXG4gICAgICB0aGlzLnNlbGVjdG9yX3Bob3Rvcy5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgJ3NlbGVjdG9yc19fcGhvdG9zJylcbiAgICAgIHRoaXMuc2VsZWN0b3JfdmlkZW9zLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnc2VsZWN0b3JzX192aWRlb3MtLWFjdGl2ZScpXG4gICAgfSlcbiAgfVxuXG4gIC8qXG4gICAgQW5pbWF0aW9ucy5cbiAgKi9cblxuICBzaG93KClcbiAge1xuICAgIG1hcCh0aGlzLmltYWdlX2VsZW1lbnRzLCBlbGVtZW50ID0+IGVsZW1lbnQuc2hvdygpKVxuICAgIG1hcCh0aGlzLnZpZGVvX2VsZW1lbnRzLCBlbGVtZW50ID0+IGVsZW1lbnQuc2hvdygpKVxuICB9XG5cbiAgaGlkZSgpXG4gIHtcbiAgICBtYXAodGhpcy5pbWFnZV9lbGVtZW50cywgZWxlbWVudCA9PiBlbGVtZW50LmhpZGUoKSlcbiAgICBtYXAodGhpcy52aWRlb19lbGVtZW50cywgZWxlbWVudCA9PiBlbGVtZW50LmhpZGUoKSlcbiAgfVxuXG4gIC8qXG4gICAgRXZlbnRzLlxuICAqL1xuXG4gIG9uUmVzaXplKClcbiAge1xuICAgIHRoaXMuYm91bmRzID0gdGhpcy5nYWxsZXJ5X3dyYXBwZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblxuICAgIG1hcCh0aGlzLmltYWdlX2VsZW1lbnRzLCBlbGVtZW50ID0+IGVsZW1lbnQub25SZXNpemUoe1xuICAgICAgc2NyZWVuOiB0aGlzLnNjcmVlbixcbiAgICAgIHZpZXdwb3J0OiB0aGlzLnZpZXdwb3J0LFxuICAgIH0pKVxuXG4gICAgbWFwKHRoaXMudmlkZW9fZWxlbWVudHMsIGVsZW1lbnQgPT4gZWxlbWVudC5vblJlc2l6ZSh7XG4gICAgICBzY3JlZW46IHRoaXMuc2NyZWVuLFxuICAgICAgdmlld3BvcnQ6IHRoaXMudmlld3BvcnQsXG4gICAgfSkpXG5cbiAgICB0aGlzLnNjcm9sbC5saW1pdCA9IHRoaXMuYm91bmRzLndpZHRoIC0gdGhpcy5pbWFnZV9lbGVtZW50c1swXS5lbGVtZW50LmNsaWVudFdpZHRoXG4gIH1cblxuICBvblRvdWNoRG93bih7IHksIHggfSlcbiAge1xuICAgIHRoaXMuc2Nyb2xsLnBvc2l0aW9uID0gdGhpcy5zY3JvbGwuY3VycmVudFxuICB9XG5cbiAgb25Ub3VjaE1vdmUoeyB5LCB4IH0pXG4gIHtcbiAgICBjb25zdCB4X2Rpc3QgPSB4LnN0YXJ0IC0geC5lbmRcblxuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCA9IHRoaXMuc2Nyb2xsLnBvc2l0aW9uIC0geF9kaXN0XG4gIH1cblxuICBvblRvdWNoVXAoeyB5LCB4IH0pXG4gIHtcblxuICB9XG5cbiAgb25XaGVlbCh7IHBpeGVsWSwgcGl4ZWxYIH0pXG4gIHtcbiAgICAvL3RoaXMuc2Nyb2xsLnRhcmdldCAtPSBwaXhlbFggKiAwLjVcbiAgfVxuXG4gIC8qXG4gICAgVXBkYXRlLlxuICAqL1xuXG4gIHVwZGF0ZSgpXG4gIHtcbiAgICB0aGlzLnNjcm9sbC50YXJnZXQgPSBnc2FwLnV0aWxzLmNsYW1wKC10aGlzLnNjcm9sbC5saW1pdCwgMCwgdGhpcy5zY3JvbGwudGFyZ2V0KVxuICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBnc2FwLnV0aWxzLmludGVycG9sYXRlKHRoaXMuc2Nyb2xsLmN1cnJlbnQsIHRoaXMuc2Nyb2xsLnRhcmdldCwgdGhpcy5zY3JvbGwuZWFzZSlcblxuICAgIHRoaXMuZ2FsbGVyeV9lbGVtZW50LnN0eWxlW3RoaXMudF9wcmVmaXhdID0gYHRyYW5zbGF0ZVgoJHt0aGlzLnNjcm9sbC5jdXJyZW50fXB4KWBcblxuICAgIG1hcCh0aGlzLmltYWdlX2VsZW1lbnRzLCBlbGVtZW50ID0+IGVsZW1lbnQudXBkYXRlKHRoaXMuc2Nyb2xsKSlcbiAgICBtYXAodGhpcy52aWRlb19lbGVtZW50cywgZWxlbWVudCA9PiBlbGVtZW50LnVwZGF0ZSh0aGlzLnNjcm9sbCkpXG5cbiAgICB0aGlzLnNjcm9sbC5sYXN0ID0gdGhpcy5zY3JvbGwuY3VycmVudFxuICB9XG5cbiAgLypcbiAgICBEZXN0cm95LlxuICAqL1xuXG4gIGRlc3Ryb3koKVxuICB7XG4gICAgdGhpcy5zY2VuZS5yZW1vdmVDaGlsZCh0aGlzLmdyb3VwKVxuICB9XG59XG4iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI3NGYyMzUyODQ2YmQ3YmYyOGMwYVwiKSJdLCJuYW1lcyI6WyJHYWxsZXJ5IiwiY29uc3RydWN0b3IiLCJnbCIsInNjZW5lIiwic2NyZWVuIiwidmlld3BvcnQiLCJjYW1lcmEiLCJ0aGlzIiwiZ3JvdXAiLCJUcmFuc2Zvcm0iLCJzY3JvbGwiLCJjdXJyZW50IiwidGFyZ2V0IiwibGFzdCIsInNwZWVkIiwiZWFzZSIsInRfcHJlZml4IiwiUHJlZml4IiwiY3JlYXRlR2VvbWV0cnkiLCJnZXRFbGVtZW50cyIsImNyZWF0ZU1lbnUiLCJjcmVhdGVNZW51U2VsZWN0b3IiLCJvblJlc2l6ZSIsInNldFBhcmVudCIsInNob3ciLCJnZW8iLCJQbGFuZSIsImhlaWdodFNlZ21lbnRzIiwid2lkdGhTZWdtZW50cyIsImdhbGxlcnlfZWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImdhbGxlcnlfd3JhcHBlciIsInNlbGVjdG9yX3ZpZGVvcyIsInNlbGVjdG9yX3Bob3RvcyIsImltZ19lbCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ2aWRfZWwiLCJ2aWRfbGlua3MiLCJpbWdfbGlua3MiLCJpbWdfbGVuZ3RoIiwibGVuZ3RoIiwidmlkX2xlbmd0aCIsInZpZGVvX2VsZW1lbnRzIiwibWFwIiwiZWxlbWVudCIsImluZGV4IiwiSW1hZ2VFbCIsImxpbmsiLCJnZW9tZXRyeSIsImltYWdlX2VsZW1lbnRzIiwic2V0QXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdzYXAiLCJ0byIsImxpbWl0IiwiZHVyYXRpb24iLCJoaWRlIiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJjbGllbnRXaWR0aCIsIm9uVG91Y2hEb3duIiwieSIsIngiLCJwb3NpdGlvbiIsIm9uVG91Y2hNb3ZlIiwieF9kaXN0Iiwic3RhcnQiLCJlbmQiLCJvblRvdWNoVXAiLCJvbldoZWVsIiwicGl4ZWxZIiwicGl4ZWxYIiwidXBkYXRlIiwic3R5bGUiLCJkZXN0cm95IiwicmVtb3ZlQ2hpbGQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=