/*! For license information please see main.9f60d975239f0ef8f2ee.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Project/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),n=s("./node_modules/gsap/index.js"),r=s("./app/shaders/plane-vertex.glsl"),o=s("./app/shaders/plane-fragment.glsl");class l{constructor({element:e,index:t,geometry:s,gl:i,length:h,scene:a,screen:n,viewport:r}){this.element=e,this.index=t,this.geo=s,this.gl=i,this.length=h,this.scene=a,this.screen=n,this.viewport=r,this.extra=0,this.createMesh(),this.createBounds()}createMesh(){const e=new Image,t=new i.Texture(this.gl,{generateMipmaps:!1}),s=new h.Program(this.gl,{vertex:r.default,fragment:o.default,uniforms:{tMap:{value:t},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_offset:{value:0},u_strength:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}});e.crossOrigin="anonymous",e.src=this.element.getAttribute("data-src"),e.onload=i=>{s.uniforms.u_imageSize.value=[e.naturalWidth,e.naturalHeight],t.image=e},this.plane=new a.Mesh(this.gl,{geometry:this.geo,program:s}),this.plane.setParent(this.scene),this.scale={x:this.plane.scale.x/2,y:this.plane.scale.y/2},this.margin=.5*this.index,this.wholeheight=this.length*(this.plane.scale.y+this.margin)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}onResize(e){if(this.extra=0,e){const{height:t,screen:s,viewport:i}=e;t&&(this.height=t),s&&(this.screen=s),i&&(this.viewport=i,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width,this.plane.position.x=-this.viewport.width/2+this.scale.x+this.x*this.viewport.width}updateY(e=0){this.y=(this.bounds.top-e)/this.screen.height;const t=this.plane.position.y-this.y/100;this.plane.program.uniforms.u_offset.value=n.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.y=this.viewport.height/2-this.scale.y-this.y*this.viewport.height+this.extra}update(e,t,s){if(this.bounds){if(this.updateScale(),this.updateX(),this.updateY(e),"up"===s){this.plane.position.y,this.scale.y;this.viewport.height}if("down"===s){this.plane.position.y,this.scale.y;this.viewport.height}this.plane.program.uniforms.u_strength.value=e>0?(e-t)/this.screen.height*15:-(e+t)/this.screen.height*15}}}}},(function(e){e.h=()=>"4f114bcd28e56b57229b"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,