/*! For license information please see main.8781f1f4964307464517.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/ogl/src/core/Transform.js"),l=s("./node_modules/ogl/src/extras/Plane.js"),o=s("./node_modules/gsap/index.js"),r=s("./node_modules/lodash/map.js"),h=s.n(r),n=s("./node_modules/prefix/index.js"),c=s.n(n),a=s("./app/components/Canvas/Home/menu/ImageEl.js");class d{constructor({gl:e,scene:t,screen:s,viewport:l,camera:o}){this.gl=e,this.scene=t,this.screen=s,this.viewport=l,this.camera=o,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,speed:.1,ease:.05},this.t_prefix=c()("transform"),this.createGeometry(),this.getElements(),this.createMenu(),this.createMenuSelector(),this.onResize(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geo=new l.Plane(this.gl,{heightSegments:10,widthSegments:10})}getElements(){this.gallery_element=document.querySelector(".home__gallery"),this.gallery_wrapper=document.querySelector(".home__gallery__wrapper"),this.selector_videos=document.querySelector(".selectors__videos"),this.selector_photos=document.querySelector(".selectors__photos"),this.img_el=document.querySelectorAll("img.home__gallery__image__media__image"),this.vid_el=document.querySelectorAll("img.home__gallery__video__media__image"),this.img_length=this.img_el.length,this.vid_length=this.vid_el.length}createMenu(){this.image_elements=h()(this.img_el,((e,t)=>new a.default({element:e,index:t,geometry:this.geo,gl:this.gl,length:this.img_length,scene:this.group,screen:this.screen,viewport:this.viewport}))),this.video_elements=h()(this.vid_el,((e,t)=>new a.default({element:e,index:t,geometry:this.geo,gl:this.gl,length:this.vid_length,scene:this.group,screen:this.screen,viewport:this.viewport})))}createMenuSelector(){this.selector_videos.setAttribute("class","selectors__videos--active"),this.selector_photos.addEventListener("click",(()=>{const e=o.default.timeline();this.vid_el.forEach(((t,s)=>{e.fromTo(t,{scaleY:1},{scaleY:0,duration:1,delay:.1*s},0)})),e.to(this.scroll,{target:-this.scroll.limit,duration:.5},0),this.img_el.forEach(((t,s)=>{e.fromTo(t,{scaleY:0},{scaleY:1,duration:1,delay:.1*s},0)})),this.selector_videos.setAttribute("class","selectors__videos"),this.selector_photos.setAttribute("class","selectors__photos--active")})),this.selector_videos.addEventListener("click",(()=>{const e=o.default.timeline();e.to(this.scroll,{target:0,duration:.5}),this.vid_el.forEach(((t,s)=>{e.fromTo(t,{scaleY:0},{scaleY:1,duration:1,delay:.1*s},0)})),this.selector_photos.setAttribute("class","selectors__photos"),this.selector_videos.setAttribute("class","selectors__videos--active")}))}show(){h()(this.image_elements,(e=>e.show())),h()(this.video_elements,(e=>e.show()))}hide(){h()(this.image_elements,(e=>e.hide())),h()(this.video_elements,(e=>e.hide()))}onResize(){this.bounds=this.gallery_wrapper.getBoundingClientRect(),h()(this.image_elements,(e=>e.onResize({screen:this.screen,viewport:this.viewport}))),h()(this.video_elements,(e=>e.onResize({screen:this.screen,viewport:this.viewport}))),this.scroll.limit=this.bounds.width-this.image_elements[0].element.clientWidth}onTouchDown({y:e,x:t}){this.scroll.position=this.scroll.current}onTouchMove({y:e,x:t}){const s=t.start-t.end;this.scroll.target=this.scroll.position-s}onTouchUp({y:e,x:t}){}onWheel({pixelY:e,pixelX:t}){this.scroll.target-=.5*t}update(){this.scroll.target=o.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.ease),this.gallery_element.style[this.t_prefix]=`translateX(${this.scroll.current}px)`,h()(this.image_elements,(e=>e.update(this.scroll))),h()(this.video_elements,(e=>e.update(this.scroll))),this.scroll.last=this.scroll.current}destroy(){this.scene.removeChild(this.group)}}}},(function(e){e.h=()=>"e0ca6ec74d8ed4a395ff"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,