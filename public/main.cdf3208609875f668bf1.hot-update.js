/*! For license information please see main.cdf3208609875f668bf1.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateitsforgotham("main",{"./app/components/Canvas/Home/MenuElement.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>l});var s=i("./node_modules/ogl/src/core/Texture.js"),h=i("./node_modules/ogl/src/core/Program.js"),a=i("./node_modules/ogl/src/core/Mesh.js"),n=i("./node_modules/gsap/index.js"),o=i("./app/shaders/home/vertex.glsl"),r=i("./app/shaders/home/fragment.glsl");class l{constructor({element:e,index:t,geometry:i,gl:s,length:h,scene:a,screen:n,viewport:o}){this.element=e,this.index=t,this.geo=i,this.gl=s,this.length=h,this.scene=a,this.screen=n,this.viewport=o,this.new_pos=0,this.createMesh(),this.createBounds()}createMesh(){const e=new Image,t=new s.Texture(this.gl,{generateMipmaps:!1});this.program=new h.Program(this.gl,{vertex:o.default,fragment:r.default,uniforms:{tMap:{value:t},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_alpha:{value:0},u_offset:{value:0},u_strength:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}}}),e.crossOrigin="anonymous",e.src=this.element.getAttribute("data-src"),e.onload=()=>{this.program.uniforms.u_imageSize.value=[e.naturalWidth,e.naturalHeight],t.image=e},this.plane=new a.Mesh(this.gl,{geometry:this.geo,program:this.program}),this.plane.setParent(this.scene)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.wrap=document.querySelector(".home__gallery__wrapper"),this.wrap_bounds=this.wrap.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y],this.full_width=this.wrap_bounds.width/this.screen.width*this.viewport.width}show(){n.default.fromTo(this.program.uniforms.u_alpha,{value:0,duration:1},{value:1,duration:1})}hide(){n.default.to(this.program.uniforms.u_alpha,{value:0,duration:1})}onResize(e){if(this.new_pos=0,e){const{screen:t,viewport:i}=e;t&&(this.screen=t),i&&(this.viewport=i,this.plane.program.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.program.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(e=0){this.x=(this.bounds.left-e)/this.screen.width;const t=this.plane.position.x-this.x/100;this.plane.program.uniforms.u_offset.value=n.default.utils.mapRange(-4,4,-.35,.35,t),this.plane.position.x=this.viewport.width/2-this.plane.scale.x/2-this.x*this.viewport.width+this.new_pos}updateY(){this.y=this.bounds.top/this.screen.height,this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y*this.viewport.height,this.plane.position.y+=50*Math.cos(this.plane.position.x/this.viewport.width*Math.PI*.1)-50}update(e,t){if(this.bounds){if(this.updateScale(),this.updateX(e.current),this.updateY(),this.plane.program.uniforms.u_strength.value=(e.current-e.last)/this.screen.width*30,"up"===t){this.plane.position.x+this.plane.scale.x<-this.viewport.width/2&&(this.new_pos+=this.full_width)}if("down"===t){this.plane.position.x-this.plane.scale.x>this.viewport.width/2&&(this.new_pos-=this.full_width)}}}}}},(function(e){e.h=()=>"4b7b080525dbd37283cb"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jZGYzMjA4NjA5ODc1ZjY2OGJmMS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MFlBTWUsTUFBTUEsRUFFbkJDLGFBQVksUUFBRUMsRUFBTyxNQUFFQyxFQUFLLFNBQUVDLEVBQVEsR0FBRUMsRUFBRSxPQUFFQyxFQUFNLE1BQUVDLEVBQUssT0FBRUMsRUFBTSxTQUFFQyxJQUVqRUMsS0FBS1IsUUFBVUEsRUFDZlEsS0FBS1AsTUFBUUEsRUFDYk8sS0FBS0MsSUFBTVAsRUFDWE0sS0FBS0wsR0FBS0EsRUFDVkssS0FBS0osT0FBU0EsRUFDZEksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsT0FBU0EsRUFDZEUsS0FBS0QsU0FBV0EsRUFFaEJDLEtBQUtFLFFBQVUsRUFFZkYsS0FBS0csYUFFTEgsS0FBS0ksY0FDUCxDQU1BRCxhQUVFLE1BQU1FLEVBQVEsSUFBSUMsTUFDWkMsRUFBVSxJQUFJQyxFQUFBQSxRQUFRUixLQUFLTCxHQUFJLENBQ25DYyxpQkFBaUIsSUFHbkJULEtBQUtVLFFBQVUsSUFBSUMsRUFBQUEsUUFBUVgsS0FBS0wsR0FDaEMsQ0FDRWlCLE9BQU0sVUFDTkMsU0FBUSxVQUNSQyxTQUNBLENBQ0VDLEtBQU0sQ0FBRUMsTUFBT1QsR0FDZlUsWUFBYSxDQUFFRCxNQUFPLENBQUMsRUFBRyxJQUMxQkUsWUFBYSxDQUFFRixNQUFPLENBQUMsRUFBRyxJQUMxQkcsUUFBUyxDQUFFSCxNQUFPLEdBQ2xCSSxTQUFVLENBQUVKLE1BQU8sR0FDbkJLLFdBQVksQ0FBRUwsTUFBTyxHQUNyQk0sZUFBZ0IsQ0FBRU4sTUFBTyxDQUFDaEIsS0FBS0QsU0FBU3dCLE1BQU92QixLQUFLRCxTQUFTeUIsWUFJakVuQixFQUFNb0IsWUFBYyxZQUNwQnBCLEVBQU1xQixJQUFNMUIsS0FBS1IsUUFBUW1DLGFBQWEsWUFDdEN0QixFQUFNdUIsT0FBUyxLQUViNUIsS0FBS1UsUUFBUUksU0FBU0csWUFBWUQsTUFBUSxDQUFDWCxFQUFNd0IsYUFBY3hCLEVBQU15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RCxLQUFLK0IsTUFBTXlCLFNBQVNaLEVBQUk1QyxLQUFLRCxTQUFTd0IsTUFBU21DLEtBQUtFLEdBQUssSUFBWSxFQUMxRyxDQUVBQyxPQUFPQyxFQUFRQyxHQUViLEdBQUkvRCxLQUFLa0MsT0FBVCxDQVFBLEdBTkFsQyxLQUFLd0MsY0FDTHhDLEtBQUt5QyxRQUFRcUIsRUFBT1QsU0FDcEJyRCxLQUFLMEMsVUFFTDFDLEtBQUsrQixNQUFNckIsUUFBUUksU0FBU08sV0FBV0wsT0FBVThDLEVBQU9ULFFBQVVTLEVBQU9FLE1BQVFoRSxLQUFLRixPQUFPeUIsTUFBUyxHQUVyRixPQUFkd0MsRUFDSCxDQUNZL0QsS0FBSytCLE1BQU15QixTQUFTWixFQUFJNUMsS0FBSytCLE1BQU1ZLE1BQU1DLEdBRTNDNUMsS0FBS0QsU0FBU3dCLE1BQVEsSUFFNUJ2QixLQUFLRSxTQUFXRixLQUFLOEMsV0FFekIsQ0FFQSxHQUFpQixTQUFkaUIsRUFDSCxDQUNZL0QsS0FBSytCLE1BQU15QixTQUFTWixFQUFJNUMsS0FBSytCLE1BQU1ZLE1BQU1DLEVBRTVDNUMsS0FBS0QsU0FBU3dCLE1BQVEsSUFFM0J2QixLQUFLRSxTQUFXRixLQUFLOEMsV0FFekIsQ0ExQnVCLENBMkJ6QixrQkN4TUZtQixFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXRzZm9yZ290aGFtLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL0hvbWUvTWVudUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vaXRzZm9yZ290aGFtL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNoLCBQcm9ncmFtLCBUZXh0dXJlIH0gZnJvbSAnb2dsJ1xuaW1wb3J0IGdzYXAgZnJvbSAnZ3NhcCdcblxuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL2hvbWUvdmVydGV4Lmdsc2wnXG5pbXBvcnQgZnJhZ21lbnQgZnJvbSAnc2hhZGVycy9ob21lL2ZyYWdtZW50Lmdsc2wnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnVFbGVtZW50XG57XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgaW5kZXgsIGdlb21ldHJ5LCBnbCwgbGVuZ3RoLCBzY2VuZSwgc2NyZWVuLCB2aWV3cG9ydCB9KVxuICB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudFxuICAgIHRoaXMuaW5kZXggPSBpbmRleFxuICAgIHRoaXMuZ2VvID0gZ2VvbWV0cnlcbiAgICB0aGlzLmdsID0gZ2xcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aFxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgIHRoaXMuc2NyZWVuID0gc2NyZWVuXG4gICAgdGhpcy52aWV3cG9ydCA9IHZpZXdwb3J0XG5cbiAgICB0aGlzLm5ld19wb3MgPSAwXG5cbiAgICB0aGlzLmNyZWF0ZU1lc2goKVxuXG4gICAgdGhpcy5jcmVhdGVCb3VuZHMoKVxuICB9XG5cbiAgLypcbiAgICBDcmVhdGUuXG4gICovXG5cbiAgY3JlYXRlTWVzaCgpXG4gIHtcbiAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpXG4gICAgY29uc3QgdGV4dHVyZSA9IG5ldyBUZXh0dXJlKHRoaXMuZ2wsIHtcbiAgICAgIGdlbmVyYXRlTWlwbWFwczogZmFsc2VcbiAgICB9KVxuXG4gICAgdGhpcy5wcm9ncmFtID0gbmV3IFByb2dyYW0odGhpcy5nbCxcbiAgICB7XG4gICAgICB2ZXJ0ZXgsXG4gICAgICBmcmFnbWVudCxcbiAgICAgIHVuaWZvcm1zOlxuICAgICAge1xuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0ZXh0dXJlIH0sXG4gICAgICAgIHVfaW1hZ2VTaXplOiB7IHZhbHVlOiBbMCwgMF0gfSxcbiAgICAgICAgdV9wbGFuZVNpemU6IHsgdmFsdWU6IFswLCAwXSB9LFxuICAgICAgICB1X2FscGhhOiB7IHZhbHVlOiAwLjAgfSxcbiAgICAgICAgdV9vZmZzZXQ6IHsgdmFsdWU6IDAgfSxcbiAgICAgICAgdV9zdHJlbmd0aDogeyB2YWx1ZTogMCB9LFxuICAgICAgICB1X3ZpZXdwb3J0U2l6ZTogeyB2YWx1ZTogW3RoaXMudmlld3BvcnQud2lkdGgsIHRoaXMudmlld3BvcnQuaGVpZ2h0XSB9XG4gICAgICB9XG4gICAgfSlcblxuICAgIGltYWdlLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cydcbiAgICBpbWFnZS5zcmMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXG4gICAgaW1hZ2Uub25sb2FkID0gKCkgPT5cbiAgICB7XG4gICAgICB0aGlzLnByb2dyYW0udW5pZm9ybXMudV9pbWFnZVNpemUudmFsdWUgPSBbaW1hZ2UubmF0dXJhbFdpZHRoLCBpbWFnZS5uYXR1cmFsSGVpZ2h0XVxuICAgICAgdGV4dHVyZS5pbWFnZSA9IGltYWdlXG4gICAgfVxuXG4gICAgdGhpcy5wbGFuZSA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlbyxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbVxuICAgIH0pXG5cbiAgICB0aGlzLnBsYW5lLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuICB9XG5cbiAgY3JlYXRlQm91bmRzKClcbiAge1xuICAgIHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICB0aGlzLndyYXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaG9tZV9fZ2FsbGVyeV9fd3JhcHBlcicpXG4gICAgdGhpcy53cmFwX2JvdW5kcyA9IHRoaXMud3JhcC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuXG4gICAgdGhpcy51cGRhdGVTY2FsZSgpXG4gICAgdGhpcy51cGRhdGVYKClcbiAgICB0aGlzLnVwZGF0ZVkoKVxuXG4gICAgdGhpcy5wbGFuZS5wcm9ncmFtLnVuaWZvcm1zLnVfcGxhbmVTaXplLnZhbHVlID0gW3RoaXMucGxhbmUuc2NhbGUueCwgdGhpcy5wbGFuZS5zY2FsZS55XVxuXG4gICAgdGhpcy5mdWxsX3dpZHRoID0gKCh0aGlzLndyYXBfYm91bmRzLndpZHRoIC8gdGhpcy5zY3JlZW4ud2lkdGgpICogdGhpcy52aWV3cG9ydC53aWR0aClcbiAgfVxuXG4gIC8qXG4gICAgQW5pbWF0aW9ucy5cbiAgKi9cblxuICBzaG93KClcbiAge1xuICAgIGdzYXAuZnJvbVRvKHRoaXMucHJvZ3JhbS51bmlmb3Jtcy51X2FscGhhLFxuICAgIHtcbiAgICAgIHZhbHVlOiAwLjAsXG4gICAgICBkdXJhdGlvbjogMVxuICAgIH0sXG4gICAge1xuICAgICAgdmFsdWU6IDEuMCxcbiAgICAgIGR1cmF0aW9uOiAxXG4gICAgfSlcbiAgfVxuXG4gIGhpZGUoKVxuICB7XG4gICAgZ3NhcC50byh0aGlzLnByb2dyYW0udW5pZm9ybXMudV9hbHBoYSxcbiAgICB7XG4gICAgICB2YWx1ZTogMC4wLFxuICAgICAgZHVyYXRpb246IDFcbiAgICB9KVxuICB9XG5cbiAgLypcbiAgICBFdmVudHMuXG4gICovXG5cbiAgb25SZXNpemUoc2l6ZXMpXG4gIHtcbiAgICB0aGlzLm5ld19wb3MgPSAwXG5cbiAgICBpZihzaXplcylcbiAgICB7XG4gICAgICBjb25zdCB7IHNjcmVlbiwgdmlld3BvcnQgfSA9IHNpemVzXG5cbiAgICAgIGlmKHNjcmVlbikgdGhpcy5zY3JlZW4gPSBzY3JlZW5cbiAgICAgIGlmKHZpZXdwb3J0KSB7XG4gICAgICAgIHRoaXMudmlld3BvcnQgPSB2aWV3cG9ydFxuXG4gICAgICAgIHRoaXMucGxhbmUucHJvZ3JhbS51bmlmb3Jtcy51X3ZpZXdwb3J0U2l6ZS52YWx1ZSA9IFt0aGlzLnZpZXdwb3J0LndpZHRoLCB0aGlzLnZpZXdwb3J0LmhlaWdodF1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmNyZWF0ZUJvdW5kcygpXG4gIH1cblxuICAvKlxuICAgIFVwZGF0ZS5cbiAgKi9cblxuICB1cGRhdGVTY2FsZSgpXG4gIHtcbiAgICB0aGlzLnBsYW5lLnNjYWxlLnggPSB0aGlzLnZpZXdwb3J0LndpZHRoICogdGhpcy5ib3VuZHMud2lkdGggLyB0aGlzLnNjcmVlbi53aWR0aFxuICAgIHRoaXMucGxhbmUuc2NhbGUueSA9IHRoaXMudmlld3BvcnQuaGVpZ2h0ICogdGhpcy5ib3VuZHMuaGVpZ2h0IC8gdGhpcy5zY3JlZW4uaGVpZ2h0XG5cbiAgICB0aGlzLnBsYW5lLnByb2dyYW0udW5pZm9ybXMudV9wbGFuZVNpemUudmFsdWUgPSBbdGhpcy5wbGFuZS5zY2FsZS54LCB0aGlzLnBsYW5lLnNjYWxlLnldXG5cbiAgIC8qICAvLy8vLy8vLy8vLy8gYW4gaWRlYSBmb3IgZ2FsbGVyeSBzZWxlY3Rpb24gLy8vLy8vLy8vLy8vXG5cbiAgIGNvbnN0IHNjYWxlID0gZ3NhcC51dGlscy5tYXBSYW5nZSgwLCB0aGlzLnZpZXdwb3J0LndpZHRoIC8gMiwgMCwgLS41LCBNYXRoLmFicyh0aGlzLnBsYW5lLnBvc2l0aW9uLngpKVxuXG4gICAgdGhpcy5wbGFuZS5zY2FsZS54ICs9IHNjYWxlXG4gICAgdGhpcy5wbGFuZS5zY2FsZS55ICs9IHNjYWxlICovXG4gIH1cblxuICB1cGRhdGVYKGN1cnJlbnQ9MClcbiAge1xuICAgIHRoaXMueCA9ICh0aGlzLmJvdW5kcy5sZWZ0IC0gY3VycmVudCkgLyB0aGlzLnNjcmVlbi53aWR0aFxuICAgIGNvbnN0IHBvc192aWV3cG9ydCA9IHRoaXMucGxhbmUucG9zaXRpb24ueCAtIHRoaXMueCAvIDEwMFxuXG4gICAgdGhpcy5wbGFuZS5wcm9ncmFtLnVuaWZvcm1zLnVfb2Zmc2V0LnZhbHVlID0gZ3NhcC51dGlscy5tYXBSYW5nZSgtNCwgNCwgLS4zNSwgLjM1LCBwb3Nfdmlld3BvcnQpXG5cbiAgICB0aGlzLnBsYW5lLnBvc2l0aW9uLnggPSAodGhpcy52aWV3cG9ydC53aWR0aCAvIDIpIC0gKHRoaXMucGxhbmUuc2NhbGUueCAvIDIpIC0gKHRoaXMueCAqIHRoaXMudmlld3BvcnQud2lkdGgpICsgdGhpcy5uZXdfcG9zXG4gIH1cblxuICB1cGRhdGVZKClcbiAge1xuICAgIHRoaXMueSA9IHRoaXMuYm91bmRzLnRvcCAvIHRoaXMuc2NyZWVuLmhlaWdodFxuXG4gICAgdGhpcy5wbGFuZS5wb3NpdGlvbi55ID0gKHRoaXMudmlld3BvcnQuaGVpZ2h0IC8gMikgLSAodGhpcy5wbGFuZS5zY2FsZS55IC8gMikgLSAodGhpcy55ICogdGhpcy52aWV3cG9ydC5oZWlnaHQpXG4gICAgdGhpcy5wbGFuZS5wb3NpdGlvbi55ICs9IE1hdGguY29zKCh0aGlzLnBsYW5lLnBvc2l0aW9uLnggLyB0aGlzLnZpZXdwb3J0LndpZHRoKSAqIE1hdGguUEkgKiAwLjEpICogNTAgLSA1MDtcbiAgfVxuXG4gIHVwZGF0ZShzY3JvbGwsIGRpcmVjdGlvbilcbiAge1xuICAgIGlmKCF0aGlzLmJvdW5kcykgcmV0dXJuXG5cbiAgICB0aGlzLnVwZGF0ZVNjYWxlKClcbiAgICB0aGlzLnVwZGF0ZVgoc2Nyb2xsLmN1cnJlbnQpXG4gICAgdGhpcy51cGRhdGVZKClcblxuICAgIHRoaXMucGxhbmUucHJvZ3JhbS51bmlmb3Jtcy51X3N0cmVuZ3RoLnZhbHVlID0gKChzY3JvbGwuY3VycmVudCAtIHNjcm9sbC5sYXN0KSAvIHRoaXMuc2NyZWVuLndpZHRoKSAqIDMwXG5cbiAgICBpZihkaXJlY3Rpb24gPT09ICd1cCcpXG4gICAge1xuICAgICAgY29uc3QgeCA9IHRoaXMucGxhbmUucG9zaXRpb24ueCArIHRoaXMucGxhbmUuc2NhbGUueFxuXG4gICAgICBpZih4IDwgLXRoaXMudmlld3BvcnQud2lkdGggLyAyKVxuICAgICAge1xuICAgICAgICB0aGlzLm5ld19wb3MgKz0gdGhpcy5mdWxsX3dpZHRoXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYoZGlyZWN0aW9uID09PSAnZG93bicpXG4gICAge1xuICAgICAgY29uc3QgeCA9IHRoaXMucGxhbmUucG9zaXRpb24ueCAtIHRoaXMucGxhbmUuc2NhbGUueFxuXG4gICAgICBpZih4ID4gdGhpcy52aWV3cG9ydC53aWR0aCAvIDIpXG4gICAgICB7XG4gICAgICAgIHRoaXMubmV3X3BvcyAtPSB0aGlzLmZ1bGxfd2lkdGhcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjRiN2IwODA1MjVkYmQzNzI4M2NiXCIpIl0sIm5hbWVzIjpbIk1lbnVFbGVtZW50IiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiaW5kZXgiLCJnZW9tZXRyeSIsImdsIiwibGVuZ3RoIiwic2NlbmUiLCJzY3JlZW4iLCJ2aWV3cG9ydCIsInRoaXMiLCJnZW8iLCJuZXdfcG9zIiwiY3JlYXRlTWVzaCIsImNyZWF0ZUJvdW5kcyIsImltYWdlIiwiSW1hZ2UiLCJ0ZXh0dXJlIiwiVGV4dHVyZSIsImdlbmVyYXRlTWlwbWFwcyIsInByb2dyYW0iLCJQcm9ncmFtIiwidmVydGV4IiwiZnJhZ21lbnQiLCJ1bmlmb3JtcyIsInRNYXAiLCJ2YWx1ZSIsInVfaW1hZ2VTaXplIiwidV9wbGFuZVNpemUiLCJ1X2FscGhhIiwidV9vZmZzZXQiLCJ1X3N0cmVuZ3RoIiwidV92aWV3cG9ydFNpemUiLCJ3aWR0aCIsImhlaWdodCIsImNyb3NzT3JpZ2luIiwic3JjIiwiZ2V0QXR0cmlidXRlIiwib25sb2FkIiwibmF0dXJhbFdpZHRoIiwibmF0dXJhbEhlaWdodCIsInBsYW5lIiwiTWVzaCIsInNldFBhcmVudCIsImJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndyYXAiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3cmFwX2JvdW5kcyIsInVwZGF0ZVNjYWxlIiwidXBkYXRlWCIsInVwZGF0ZVkiLCJzY2FsZSIsIngiLCJ5IiwiZnVsbF93aWR0aCIsInNob3ciLCJnc2FwIiwiZHVyYXRpb24iLCJoaWRlIiwib25SZXNpemUiLCJzaXplcyIsImN1cnJlbnQiLCJsZWZ0IiwicG9zX3ZpZXdwb3J0IiwicG9zaXRpb24iLCJ0b3AiLCJNYXRoIiwiY29zIiwiUEkiLCJ1cGRhdGUiLCJzY3JvbGwiLCJkaXJlY3Rpb24iLCJsYXN0IiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9